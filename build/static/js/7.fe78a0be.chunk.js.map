{"version":3,"sources":["app/modules/ECommerce/pages/customers/customers-loading-dialog/CustomersLoadingDialog.js","app/modules/ECommerce/_redux/customers/customersSlice.js","app/modules/ECommerce/_redux/customers/customersActions.js","app/modules/ECommerce/_redux/customers/customersCrud.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialogHeader.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditForm.js","app/modules/ECommerce/pages/customers/CustomersUIHelpers.js","app/modules/ECommerce/pages/customers/CustomersUIContext.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialog.js","app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-delete-dialog/CustomersDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js","app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js","app/modules/ECommerce/pages/customers/customers-filter/CustomersFilter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/TypeColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js","app/modules/ECommerce/pages/customers/customers-grouping/CustomersGrouping.js","app/modules/ECommerce/pages/customers/CustomersCard.js","app/modules/ECommerce/pages/customers/CustomersPage.js","app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js","app/modules/ECommerce/_redux/products/productsSlice.js","app/modules/ECommerce/_redux/products/productsActions.js","app/modules/ECommerce/_redux/products/productsCrud.js","app/modules/ECommerce/pages/products/ProductsUIHelpers.js","app/modules/ECommerce/pages/products/ProductsUIContext.js","app/modules/ECommerce/pages/products/product-delete-dialog/ProductDeleteDialog.js","app/modules/ECommerce/pages/products/products-delete-dialog/ProductsDeleteDialog.js","app/modules/ECommerce/pages/products/products-fetch-dialog/ProductsFetchDialog.js","app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.js","app/modules/ECommerce/pages/products/products-filter/ProductsFilter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ConditionColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ColorColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/PriceColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/ProductsTable.js","app/modules/ECommerce/pages/products/products-grouping/ProductsGrouping.js","app/modules/ECommerce/pages/products/ProductsCard.js","app/modules/ECommerce/pages/products/ProductsPage.js","app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFilter.js","app/modules/ECommerce/_redux/specifications/specificationsSlice.js","app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/pages/products/product-specifications/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFetchDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsGrouping.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialogHeader.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js","app/modules/ECommerce/pages/products/product-specifications/Specifications.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIHelper.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js","app/modules/ECommerce/_redux/remarks/remarksSlice.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/pages/products/product-remarks/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js","app/modules/ECommerce/pages/products/product-remarks/RemarksLoadingDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarkDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksGrouping.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialog.js","app/modules/ECommerce/pages/products/product-remarks/Remarks.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/eCommercePage.js"],"names":["CustomersLoadingDialog","isLoading","useSelector","state","customers","listLoading","shallowEqual","useEffect","text","initialCustomersState","actionsLoading","totalCount","entities","customerForEdit","undefined","lastError","callTypes","actions","createSlice","name","initialState","reducers","catchError","action","error","type","payload","callType","startCall","customerFetched","customersFetched","customerCreated","push","customer","customerUpdated","map","entity","id","customerDeleted","filter","el","customersDeleted","ids","includes","customersStatusUpdated","status","findIndex","fetchCustomers","queryParams","dispatch","axios","post","requestFromServer","then","response","data","catch","clientMessage","fetchCustomer","customerId","get","deleteCustomer","delete","createCustomer","customerForCreation","updateCustomer","put","updateCustomersStatus","deleteCustomers","CustomerEditDialogHeader","useState","title","setTitle","_title","firstName","lastName","Modal","Header","closeButton","Title","CustomerEditSchema","Yup","shape","min","max","required","email","userName","dateOfBbirth","nullable","ipAddress","CustomerEditForm","saveCustomer","onHide","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","Body","className","component","Input","placeholder","label","customFeedbackLabel","value","Footer","onClick","CustomerStatusCssClasses","CustomerStatusTitles","CustomerTypeCssClasses","CustomerTypeTitles","defaultSorted","dataField","order","sizePerPageList","initialFilter","sortOrder","sortField","pageNumber","pageSize","CustomersUIContext","createContext","useCustomersUIContext","useContext","Consumer","CustomersUIProvider","customersUIEvents","children","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","initCustomer","gender","newCustomerButtonClick","openEditCustomerDialog","openDeleteCustomerDialog","openDeleteCustomersDialog","openFetchCustomersDialog","openUpdateCustomersStatusDialog","Provider","CustomerEditDialog","show","customersUIContext","customersUIProps","useMemo","useDispatch","size","aria-labelledby","CustomerDeleteDialog","CustomersDeleteDialog","length","selectedCustomers","_customers","forEach","find","CustomersFetchDialog","key","CustomersUpdateStateDialog","setStatus","onChange","e","target","CustomersFilter","applyFilter","newQueryParams","searchText","prepareFilter","handleBlur","setFieldValue","handleChange","onBlur","StatusColumnFormatter","cellContent","row","TypeColumnFormatter","ActionsColumnFormatter","rowIndex","src","toAbsoluteUrl","CustomersTable","currentState","columns","sort","sortCaret","headerSortingClasses","formatter","columnFormatters","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bordered","bootstrap4","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","CustomersGrouping","CustomersCard","CustomersPage","history","path","match","params","ProductsLoadingDialog","products","initialProductsState","productForEdit","productFetched","productsFetched","productCreated","product","productUpdated","productDeleted","productsDeleted","productsStatusUpdated","fetchProducts","fetchProduct","productId","deleteProduct","createProduct","productForCreation","updateProduct","updateProductsStatus","deleteProducts","ProductStatusCssClasses","ProductStatusTitles","ProductConditionCssClasses","ProductConditionTitles","model","manufacture","VINCode","AVAILABLE_COLORS","AVAILABLE_MANUFACTURES","ProductsUIContext","useProductsUIContext","ProductsUIProvider","productsUIEvents","newProductButtonClick","openEditProductPage","openDeleteProductDialog","openDeleteProductsDialog","openFetchProductsDialog","openUpdateProductsStatusDialog","ProductDeleteDialog","productsUIContext","productsUIProps","variant","ProductsDeleteDialog","selectedProducts","_products","ProductsFetchDialog","width","ProductsUpdateStatusDialog","ProductsFilter","condition","ConditionColumnFormatter","ColorColumnFormatter","color","PriceColumnFormatter","price","OverlayTrigger","overlay","Tooltip","ProductsTable","ProductsGrouping","ProductsCard","ProductsPage","ProductEditSchema","modelYear","mileage","ProductEditForm","btnRef","saveProduct","index","as","display","ref","SPECIFICATIONS_DICTIONARY","SpecificationsUIContext","useSpecificationsUIContext","SpecificationsUIProvider","currentProductId","setProductId","selectedId","setSelectedId","initSpecification","specId","carId","showEditSpecificationDialog","setShowEditSpecificationDialog","showDeleteSpecificationDialog","setShowDeleteSpecificationDialog","showDeleteSpecificationsDialog","setShowDeleteSpecificationsDialog","showFetchSpecificationsDialog","setShowFetchSpecificationsDialog","openEditSpecificationDialog","openNewSpecificationDialog","closeEditSpecificationDialog","openDeleteSpecificationDialog","closeDeleteSpecificationDialog","openDeleteSpecificationsDialog","closeDeleteSpecificationsDialog","openFetchSpecificationsDialog","closeFetchSpecificationsDialog","SpecificationsFilter","specsUIContext","specsUIProps","initialSpecificationsState","specificationForEdit","specificationFetched","specificationsFetched","specificationCreated","specification","specificationUpdated","specificationDeleted","specificationsDeleted","fetchSpecifications","fetchSpecification","specificationId","deleteSpecification","createSpecification","specificationForCreation","updateSpecification","deleteSpecifications","SpecificationsTable","specifications","SpecificationsLoadingDialog","SpecificationsDeleteDialog","SpecificationDeleteDialog","selectedSpecifications","_specifications","SpecificationsFetchDialog","SpecificationsGrouping","SpecificationEditDialogHeader","SpecificationEditSchema","SpecificationEditForm","saveSpecification","spec","SpecificationEditDialog","Specifications","RemarksUIContext","useRemarksUIContext","RemarksUIProvider","showEditRemarkDialog","setShowEditRemarkDialog","initRemark","dueDate","showDeleteRemarkDialog","setShowDeleteRemarkDialog","showDeleteRemarksDialog","setShowDeleteRemarksDialog","showFetchRemarksDialog","setShowFetchRemarksDialog","openNewRemarkDialog","openEditRemarkDialog","closeEditRemarkDialog","openDeleteRemarkDialog","closeDeleteRemarkDialog","openDeleteRemarksDialog","closeDeleteRemarksDialog","openFetchRemarksDialog","closeFetchRemarksDialog","RemarksFilter","remarksUIContext","remarksUIProps","initialRemarksState","remarkForEdit","remarkFetched","remarksFetched","remarkCreated","remark","remarkUpdated","remarkDeleted","remarksDeleted","remarksStatusUpdated","fetchRemarks","fetchRemark","remarkId","deleteRemark","createRemark","remarkForCreation","updateRemark","deleteRemarks","console","log","RemarksTable","remarks","RemarksLoadingDialog","RemarksDeleteDialog","RemarkDeleteDialog","selectedRemarks","_remarks","RemarksFetchDialog","RemarksGrouping","RemarkEditDialogHeader","RemarkEditSchema","RemarkEditForm","saveRemark","RemarkEditDialog","date","year","getFullYear","month","getMonth","toString","day","getDate","getFormattedDate","Remarks","initProduct","description","ProductEdit","suhbeader","useSubheader","tab","setTab","useRef","backToProductsList","current","click","role","data-toggle","aria-selected","eCommercePage","fallback","exact","from","to"],"mappings":"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","file":"static/js/7.fe78a0be.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\n\nexport function CustomersLoadingDialog() {\n  // Customers Redux state\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.customers.listLoading }),\n    shallowEqual\n  );\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialCustomersState = {\n  listLoading: false,\n  actionsLoading: false,\n  totalCount: 0,\n  entities: null,\n  customerForEdit: undefined,\n  lastError: null\n};\nexport const callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\n\nexport const customersSlice = createSlice({\n  name: \"customers\",\n  initialState: initialCustomersState,\n  reducers: {\n    catchError: (state, action) => {\n      state.error = `${action.type}: ${action.payload.error}`;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionsLoading = false;\n      }\n    },\n    startCall: (state, action) => {\n      state.error = null;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionsLoading = true;\n      }\n    },\n    // getCustomerById\n    customerFetched: (state, action) => {\n      state.actionsLoading = false;\n      state.customerForEdit = action.payload.customerForEdit;\n      state.error = null;\n    },\n    // findCustomers\n    customersFetched: (state, action) => {\n      const { totalCount, entities } = action.payload;\n      state.listLoading = false;\n      state.error = null;\n      state.entities = entities;\n      state.totalCount = totalCount;\n    },\n    // createCustomer\n    customerCreated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      state.entities.push(action.payload.customer);\n    },\n    // updateCustomer\n    customerUpdated: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.map(entity => {\n        if (entity.id === action.payload.customer.id) {\n          return action.payload.customer;\n        }\n        return entity;\n      });\n    },\n    // deleteCustomer\n    customerDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\n    },\n    // deleteCustomers\n    customersDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(\n        el => !action.payload.ids.includes(el.id)\n      );\n    },\n    // customersUpdateState\n    customersStatusUpdated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      const { ids, status } = action.payload;\n      state.entities = state.entities.map(entity => {\n        if (ids.findIndex(id => id === entity.id) > -1) {\n          entity.status = status;\n        }\n        return entity;\n      });\n    }\n  }\n});\n","import * as requestFromServer from \"./customersCrud\";\nimport {customersSlice, callTypes} from \"./customersSlice\";\n\nconst {actions} = customersSlice;\n\nexport const fetchCustomers = queryParams => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.list }));\n  return requestFromServer\n    .findCustomers(queryParams)\n    .then(response => {\n      const { totalCount, entities } = response.data;\n      dispatch(actions.customersFetched({ totalCount, entities }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find customers\";\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\n    });\n};\n\nexport const fetchCustomer = id => dispatch => {\n  if (!id) {\n    return dispatch(actions.customerFetched({ customerForEdit: undefined }));\n  }\n\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .getCustomerById(id)\n    .then(response => {\n      const customer = response.data;\n      dispatch(actions.customerFetched({ customerForEdit: customer }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find customer\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteCustomer = id => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteCustomer(id)\n    .then(response => {\n      dispatch(actions.customerDeleted({ id }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete customer\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const createCustomer = customerForCreation => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .createCustomer(customerForCreation)\n    .then(response => {\n      const { customer } = response.data;\n      dispatch(actions.customerCreated({ customer }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't create customer\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateCustomer = customer => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateCustomer(customer)\n    .then(() => {\n      dispatch(actions.customerUpdated({ customer }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update customer\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateCustomersStatus = (ids, status) => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateStatusForCustomers(ids, status)\n    .then(() => {\n      dispatch(actions.customersStatusUpdated({ ids, status }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update customers status\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteCustomers = ids => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteCustomers(ids)\n    .then(() => {\n      dispatch(actions.customersDeleted({ ids }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete customers\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n","import axios from \"axios\";\n\nexport const CUSTOMERS_URL = \"api/customers\";\n\n// CREATE =>  POST: add a new customer to the server\nexport function createCustomer(customer) {\n  return axios.post(CUSTOMERS_URL, { customer });\n}\n\n// READ\nexport function getAllCustomers() {\n  return axios.get(CUSTOMERS_URL);\n}\n\nexport function getCustomerById(customerId) {\n  return axios.get(`${CUSTOMERS_URL}/${customerId}`);\n}\n\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\n// items => filtered/sorted result\nexport function findCustomers(queryParams) {\n  return axios.post(`${CUSTOMERS_URL}/find`, { queryParams });\n}\n\n// UPDATE => PUT: update the customer on the server\nexport function updateCustomer(customer) {\n  return axios.put(`${CUSTOMERS_URL}/${customer.id}`, { customer });\n}\n\n// UPDATE Status\nexport function updateStatusForCustomers(ids, status) {\n  return axios.post(`${CUSTOMERS_URL}/updateStatusForCustomers`, {\n    ids,\n    status\n  });\n}\n\n// DELETE => delete the customer from the server\nexport function deleteCustomer(customerId) {\n  return axios.delete(`${CUSTOMERS_URL}/${customerId}`);\n}\n\n// DELETE Customers by ids\nexport function deleteCustomers(ids) {\n  return axios.post(`${CUSTOMERS_URL}/deleteCustomers`, { ids });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function CustomerEditDialogHeader({ id }) {\n  // Customers Redux state\n  const { customerForEdit, actionsLoading } = useSelector(\n    (state) => ({\n      customerForEdit: state.customers.customerForEdit,\n      actionsLoading: state.customers.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  const [title, setTitle] = useState(\"\");\n  // Title couting\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Customer\";\n    if (customerForEdit && id) {\n      _title = `Edit customer '${customerForEdit.firstName} ${customerForEdit.lastName}'`;\n    }\n\n    setTitle(_title);\n    // eslint-disable-next-line\n  }, [customerForEdit, actionsLoading]);\n\n  return (\n    <>\n      {actionsLoading && <ModalProgressBar />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\n      </Modal.Header>\n    </>\n  );\n}\n","// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Input,\n  Select,\n  DatePickerField,\n} from \"../../../../../../_metronic/_partials/controls\";\n\n// Validation schema\nconst CustomerEditSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(3, \"Minimum 3 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Firstname is required\"),\n  lastName: Yup.string()\n    .min(3, \"Minimum 3 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Lastname is required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Email is required\"),\n  userName: Yup.string().required(\"Username is required\"),\n  dateOfBbirth: Yup.mixed()\n    .nullable(false)\n    .required(\"Date of Birth is required\"),\n  ipAddress: Yup.string().required(\"IP Address is required\"),\n});\n\nexport function CustomerEditForm({\n  saveCustomer,\n  customer,\n  actionsLoading,\n  onHide,\n}) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={customer}\n        validationSchema={CustomerEditSchema}\n        onSubmit={(values) => {\n          saveCustomer(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\n              {actionsLoading && (\n                <div className=\"overlay-layer bg-transparent\">\n                  <div className=\"spinner spinner-lg spinner-success\" />\n                </div>\n              )}\n              <Form className=\"form form-label-right\">\n                <div className=\"form-group row\">\n                  {/* First Name */}\n                  <div className=\"col-lg-4\">\n                    <Field\n                      name=\"firstName\"\n                      component={Input}\n                      placeholder=\"First Name\"\n                      label=\"First Name\"\n                    />\n                  </div>\n                  {/* Last Name */}\n                  <div className=\"col-lg-4\">\n                    <Field\n                      name=\"lastName\"\n                      component={Input}\n                      placeholder=\"Last Name\"\n                      label=\"Last Name\"\n                    />\n                  </div>\n                  {/* Login */}\n                  <div className=\"col-lg-4\">\n                    <Field\n                      name=\"userName\"\n                      component={Input}\n                      placeholder=\"Login\"\n                      label=\"Login\"\n                    />\n                  </div>\n                </div>\n                {/* Email */}\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-4\">\n                    <Field\n                      type=\"email\"\n                      name=\"email\"\n                      component={Input}\n                      placeholder=\"Email\"\n                      label=\"Email\"\n                    />\n                  </div>\n                  {/* Date of birth */}\n                  <div className=\"col-lg-4\">\n                    <DatePickerField\n                      name=\"dateOfBbirth\"\n                      label=\"Date of Birth\"\n                    />\n                  </div>\n                  {/* IP Address */}\n                  <div className=\"col-lg-4\">\n                    <Field\n                      name=\"ipAddress\"\n                      component={Input}\n                      placeholder=\"IP Address\"\n                      label=\"IP Address\"\n                      customFeedbackLabel=\"We'll never share customer IP Address with anyone else\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  {/* Gender */}\n                  <div className=\"col-lg-4\">\n                    <Select name=\"Gender\" label=\"Gender\">\n                      <option value=\"Female\">Female</option>\n                      <option value=\"Male\">Male</option>\n                    </Select>\n                  </div>\n                  {/* Type */}\n                  <div className=\"col-lg-4\">\n                    <Select name=\"type\" label=\"Type\">\n                      <option value=\"0\">Business</option>\n                      <option value=\"1\">Individual</option>\n                    </Select>\n                  </div>\n                </div>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                type=\"button\"\n                onClick={onHide}\n                className=\"btn btn-light btn-elevate\"\n              >\n                Cancel\n              </button>\n              <> </>\n              <button\n                type=\"submit\"\n                onClick={() => handleSubmit()}\n                className=\"btn btn-primary btn-elevate\"\n              >\n                Save\n              </button>\n            </Modal.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n","export const CustomerStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\nexport const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"\"];\nexport const CustomerTypeCssClasses = [\"success\", \"primary\", \"\"];\nexport const CustomerTypeTitles = [\"Business\", \"Individual\", \"\"];\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\nexport const sizePerPageList = [\n  { text: \"3\", value: 3 },\n  { text: \"5\", value: 5 },\n  { text: \"10\", value: 10 }\n];\nexport const initialFilter = {\n  filter: {\n    lastName: \"\",\n    firstName: \"\",\n    email: \"\",\n    ipAddress: \"\"\n  },\n  sortOrder: \"asc\", // asc||desc\n  sortField: \"id\",\n  pageNumber: 1,\n  pageSize: 10\n};\n","import React, {createContext, useContext, useState, useCallback} from \"react\";\nimport {isEqual, isFunction} from \"lodash\";\nimport {initialFilter} from \"./CustomersUIHelpers\";\n\nconst CustomersUIContext = createContext();\n\nexport function useCustomersUIContext() {\n  return useContext(CustomersUIContext);\n}\n\nexport const CustomersUIConsumer = CustomersUIContext.Consumer;\n\nexport function CustomersUIProvider({customersUIEvents, children}) {\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback(nextQueryParams => {\n    setQueryParamsBase(prevQueryParams => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n\n  const initCustomer = {\n    id: undefined,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    userName: \"\",\n    gender: \"Female\",\n    status: 0,\n    dateOfBbirth: \"\",\n    ipAddress: \"\",\n    type: 1\n  };\n\n  const value = {\n    queryParams,\n    setQueryParamsBase,\n    ids,\n    setIds,\n    setQueryParams,\n    initCustomer,\n    newCustomerButtonClick: customersUIEvents.newCustomerButtonClick,\n    openEditCustomerDialog: customersUIEvents.openEditCustomerDialog,\n    openDeleteCustomerDialog: customersUIEvents.openDeleteCustomerDialog,\n    openDeleteCustomersDialog: customersUIEvents.openDeleteCustomersDialog,\n    openFetchCustomersDialog: customersUIEvents.openFetchCustomersDialog,\n    openUpdateCustomersStatusDialog: customersUIEvents.openUpdateCustomersStatusDialog\n  };\n\n  return <CustomersUIContext.Provider value={value}>{children}</CustomersUIContext.Provider>;\n}","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { CustomerEditDialogHeader } from \"./CustomerEditDialogHeader\";\nimport { CustomerEditForm } from \"./CustomerEditForm\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nexport function CustomerEditDialog({ id, show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      initCustomer: customersUIContext.initCustomer,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  const { actionsLoading, customerForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.customers.actionsLoading,\n      customerForEdit: state.customers.customerForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // server call for getting Customer by id\n    dispatch(actions.fetchCustomer(id));\n  }, [id, dispatch]);\n\n  // server request for saving customer\n  const saveCustomer = (customer) => {\n    if (!id) {\n      // server request for creating customer\n      dispatch(actions.createCustomer(customer)).then(() => onHide());\n    } else {\n      // server request for updating customer\n      dispatch(actions.updateCustomer(customer)).then(() => onHide());\n    }\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <CustomerEditDialogHeader id={id} />\n      <CustomerEditForm\n        saveCustomer={saveCustomer}\n        actionsLoading={actionsLoading}\n        customer={customerForEdit || customersUIProps.initCustomer}\n        onHide={onHide}\n      />\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport {useCustomersUIContext} from \"../CustomersUIContext\";\n\nexport function CustomerDeleteDialog({ id, show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.customers.actionsLoading }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!id) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteCustomer = () => {\n    // server request for deleting customer by id\n    dispatch(actions.deleteCustomer(id)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams));\n      // clear selections list\n      customersUIProps.setIds([]);\n      // closing delete modal\n      onHide();\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {/*begin::Loading*/}\n      {isLoading && <ModalProgressBar />}\n      {/*end::Loading*/}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Customer Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete this customer?</span>\n        )}\n        {isLoading && <span>Customer is deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteCustomer}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function CustomersDeleteDialog({ show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.customers.actionsLoading }),\n    shallowEqual\n  );\n\n  // if customers weren't selected we should close modal\n  useEffect(() => {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.ids]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteCustomers = () => {\n    // server request for deleting customer by selected ids\n    dispatch(actions.deleteCustomers(customersUIProps.ids)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\n        () => {\n          // clear selections list\n          customersUIProps.setIds([]);\n          // closing delete modal\n          onHide();\n        }\n      );\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {/*begin::Loading*/}\n      {isLoading && <ModalProgressBar />}\n      {/*end::Loading*/}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Customers Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete selected customers?</span>\n        )}\n        {isLoading && <span>Customer are deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteCustomers}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nconst selectedCustomers = (entities, ids) => {\n  const _customers = [];\n  ids.forEach((id) => {\n    const customer = entities.find((el) => el.id === id);\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersFetchDialog({ show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const { customers } = useSelector(\n    (state) => ({\n      customers: selectedCustomers(\n        state.customers.entities,\n        customersUIProps.ids\n      ),\n    }),\n    shallowEqual\n  );\n\n  // if customers weren't selected we should close modal\n  useEffect(() => {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.ids]);\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Fetch selected elements\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"timeline timeline-5 mt-3\">\n          {customers.map((customer) => (\n            <div className=\"timeline-item align-items-start\" key={`id${customer.id}`}>\n              <div className=\"timeline-label font-weight-bolder text-dark-75 font-size-lg text-right pr-3\" />\n              <div className=\"timeline-badge\">\n                <i\n                  className={`fa fa-genderless text-${\n                    CustomerStatusCssClasses[customer.status]\n                  } icon-xxl`}\n                />\n              </div>\n              <div className=\"timeline-content text-dark-50 mr-5\">\n                <span\n                    className={`label label-lg label-light-${\n                      CustomerStatusCssClasses[customer.status]\n                    } label-inline`}\n                  >\n                    ID: {customer.id}\n                </span>\n                <span className=\"ml-3\">{customer.lastName}, {customer.firstName}</span>                \n              </div>\n            </div>\n          ))}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Ok\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { CustomerStatusCssClasses } from \"../CustomersUIHelpers\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nconst selectedCustomers = (entities, ids) => {\n  const _customers = [];\n  ids.forEach((id) => {\n    const customer = entities.find((el) => el.id === id);\n    if (customer) {\n      _customers.push(customer);\n    }\n  });\n  return _customers;\n};\n\nexport function CustomersUpdateStateDialog({ show, onHide }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams,\n    };\n  }, [customersUIContext]);\n\n  // Customers Redux state\n  const { customers, isLoading } = useSelector(\n    (state) => ({\n      customers: selectedCustomers(\n        state.customers.entities,\n        customersUIProps.ids\n      ),\n      isLoading: state.customers.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.ids]);\n\n  const [status, setStatus] = useState(0);\n\n  const dispatch = useDispatch();\n  const updateStatus = () => {\n    // server request for update customers status by selected ids\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\n      () => {\n        // refresh list after deletion\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\n          () => {\n            // clear selections list\n            customersUIProps.setIds([]);\n            // closing delete modal\n            onHide();\n          }\n        );\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Status has been updated for selected customers\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\n        {/*begin::Loading*/}\n        {isLoading && (\n          <div className=\"overlay-layer\">\n            <div className=\"spinner spinner-lg spinner-primary\" />\n          </div>\n        )}\n        {/*end::Loading*/}\n\n        <div className=\"timeline timeline-5 mt-3\">\n          {customers.map((customer) => (\n            <div\n              className=\"timeline-item align-items-start\"\n              key={`customersUpdate${customer.id}`}\n            >\n              <div className=\"timeline-label font-weight-bolder text-dark-75 font-size-lg text-right pr-3\" />\n              <div className=\"timeline-badge\">\n                <i\n                  className={`fa fa-genderless text-${\n                    CustomerStatusCssClasses[customer.status]\n                  } icon-xxl`}\n                />\n              </div>\n              <div className=\"timeline-content text-dark-50 mr-5\">\n                <span\n                  className={`label label-lg label-light-${\n                    CustomerStatusCssClasses[customer.status]\n                  } label-inline`}\n                >\n                  ID: {customer.id}\n                </span>\n                <span className=\"ml-3\">\n                  {customer.lastName}, {customer.firstName}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Modal.Body>\n      <Modal.Footer className=\"form\">\n        <div className=\"form-group\">\n          <select\n            className=\"form-control\"\n            value={status}\n            onChange={(e) => setStatus(+e.target.value)}\n          >\n            <option value=\"0\">Suspended</option>\n            <option value=\"1\">Active</option>\n            <option value=\"2\">Pending</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate mr-3\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            onClick={updateStatus}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Update Status\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { status, type, searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  // Filter by status\n  filter.status = status !== \"\" ? +status : undefined;\n  // Filter by type\n  filter.type = type !== \"\" ? +type : undefined;\n  // Filter by all fields\n  filter.lastName = searchText;\n  if (searchText) {\n    filter.firstName = searchText;\n    filter.email = searchText;\n    filter.ipAddress = searchText;\n  }\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function CustomersFilter({ listLoading }) {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      queryParams: customersUIContext.queryParams,\n      setQueryParams: customersUIContext.setQueryParams,\n    };\n  }, [customersUIContext]);\n\n  // queryParams, setQueryParams,\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(customersUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, customersUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      // update list by queryParams\n      customersUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          status: \"\", // values => All=\"\"/Susspended=0/Active=1/Pending=2\n          type: \"\", // values => All=\"\"/Business=0/Individual=1\n          searchText: \"\",\n        }}\n        onSubmit={(values) => {\n          applyFilter(values);\n        }}\n      >\n        {({\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\n            <div className=\"form-group row\">\n              <div className=\"col-lg-2\">\n                <select\n                  className=\"form-control\"\n                  name=\"status\"\n                  placeholder=\"Filter by Status\"\n                  // TODO: Change this code\n                  onChange={(e) => {\n                    setFieldValue(\"status\", e.target.value);\n                    handleSubmit();\n                  }}\n                  onBlur={handleBlur}\n                  value={values.status}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"0\">Susspended</option>\n                  <option value=\"1\">Active</option>\n                  <option value=\"2\">Pending</option>\n                </select>\n                <small className=\"form-text text-muted\">\n                  <b>Filter</b> by Status\n                </small>\n              </div>\n              <div className=\"col-lg-2\">\n                <select\n                  className=\"form-control\"\n                  placeholder=\"Filter by Type\"\n                  name=\"type\"\n                  onBlur={handleBlur}\n                  onChange={(e) => {\n                    setFieldValue(\"type\", e.target.value);\n                    handleSubmit();\n                  }}\n                  value={values.type}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"0\">Business</option>\n                  <option value=\"1\">Individual</option>\n                </select>\n                <small className=\"form-text text-muted\">\n                  <b>Filter</b> by Type\n                </small>\n              </div>\n              <div className=\"col-lg-2\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"searchText\"\n                  placeholder=\"Search\"\n                  onBlur={handleBlur}\n                  value={values.searchText}\n                  onChange={(e) => {\n                    setFieldValue(\"searchText\", e.target.value);\n                    handleSubmit();\n                  }}\n                />\n                <small className=\"form-text text-muted\">\n                  <b>Search</b> in all fields\n                </small>\n              </div>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\nimport React from \"react\";\nimport {\n  CustomerStatusCssClasses,\n  CustomerStatusTitles,\n} from \"../../CustomersUIHelpers\";\n\nexport function StatusColumnFormatter(cellContent, row) {\n  const getLabelCssClasses = () => {\n    return `label label-lg label-light-${\n      CustomerStatusCssClasses[row.status]\n    } label-inline`;\n  };\n  return (\n    <span className={getLabelCssClasses()}>\n      {CustomerStatusTitles[row.status]}\n    </span>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\nimport React from \"react\";\nimport {\n  CustomerTypeCssClasses,\n  CustomerTypeTitles,\n} from \"../../CustomersUIHelpers\";\n\nexport function TypeColumnFormatter(cellContent, row) {\n  return (\n    <>\n      <span\n        className={`label label-dot label-${\n          CustomerTypeCssClasses[row.type]\n        } mr-2`}\n      ></span>\n      &nbsp;\n      <span className={`font-bold font-${CustomerTypeCssClasses[row.type]}`}>\n        {CustomerTypeTitles[row.type]}\n      </span>\n    </>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\n\nexport function ActionsColumnFormatter(\n  cellContent,\n  row,\n  rowIndex,\n  { openEditCustomerDialog, openDeleteCustomerDialog }\n) {\n  return (\n    <>\n      <a\n        title=\"Edit customer\"\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n        onClick={() => openEditCustomerDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\n          />\n        </span>\n      </a>\n      <> </>\n\n      <a\n        title=\"Delete customer\"\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n        onClick={() => openDeleteCustomerDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\n        </span>\n      </a>\n    </>\n  );\n}\n","// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/customers/customersActions\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n  headerSortingClasses,\n} from \"../../../../../../_metronic/_helpers\";\nimport * as uiHelpers from \"../CustomersUIHelpers\";\nimport * as columnFormatters from \"./column-formatters\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nexport function CustomersTable() {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      queryParams: customersUIContext.queryParams,\n      setQueryParams: customersUIContext.setQueryParams,\n      openEditCustomerDialog: customersUIContext.openEditCustomerDialog,\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog,\n    };\n  }, [customersUIContext]);\n\n  // Getting curret state of customers list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.customers }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n\n  // Customers Redux state\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // clear selections list\n    customersUIProps.setIds([]);\n    // server call by queryParams\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customersUIProps.queryParams, dispatch]);\n  // Table columns\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"ID\",\n      sort: true,\n      sortCaret: sortCaret,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"firstName\",\n      text: \"Firstname\",\n      sort: true,\n      sortCaret: sortCaret,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"lastName\",\n      text: \"Lastname\",\n      sort: true,\n      sortCaret: sortCaret,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true,\n      sortCaret: sortCaret,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"gender\",\n      text: \"Gender\",\n      sort: false,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.StatusColumnFormatter,\n      headerSortingClasses,\n    },\n    {\n      dataField: \"type\",\n      text: \"Type\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.TypeColumnFormatter,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: columnFormatters.ActionsColumnFormatter,\n      formatExtraData: {\n        openEditCustomerDialog: customersUIProps.openEditCustomerDialog,\n        openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n  // Table pagination properties\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: customersUIProps.queryParams.pageSize,\n    page: customersUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                bordered={false}\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  customersUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: customersUIProps.ids,\n                  setIds: customersUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\n\nexport function CustomersGrouping() {\n  // Customers UI Context\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      setIds: customersUIContext.setIds,\n      openDeleteCustomersDialog: customersUIContext.openDeleteCustomersDialog,\n      openFetchCustomersDialog: customersUIContext.openFetchCustomersDialog,\n      openUpdateCustomersStatusDialog:\n        customersUIContext.openUpdateCustomersStatusDialog,\n    };\n  }, [customersUIContext]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n        <div className=\"col-xl-12\">\n          <div className=\"form-group form-group-inline\">\n            <div className=\"form-label form-label-no-wrap\">\n              <label className=\"font-bold font-danger\">\n                <span>\n                  Selected records count: <b>{customersUIProps.ids.length}</b>\n                </span>\n              </label>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\n                onClick={customersUIProps.openDeleteCustomersDialog}\n              >\n                <i className=\"fa fa-trash\"></i> Delete All\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={customersUIProps.openFetchCustomersDialog}\n              >\n                <i className=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={customersUIProps.openUpdateCustomersStatusDialog}\n              >\n                <i className=\"fa fa-sync-alt\"></i> Update Status\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardHeaderToolbar,\n} from \"../../../../../_metronic/_partials/controls\";\nimport { CustomersFilter } from \"./customers-filter/CustomersFilter\";\nimport { CustomersTable } from \"./customers-table/CustomersTable\";\nimport { CustomersGrouping } from \"./customers-grouping/CustomersGrouping\";\nimport { useCustomersUIContext } from \"./CustomersUIContext\";\n\nexport function CustomersCard() {\n  const customersUIContext = useCustomersUIContext();\n  const customersUIProps = useMemo(() => {\n    return {\n      ids: customersUIContext.ids,\n      newCustomerButtonClick: customersUIContext.newCustomerButtonClick,\n    };\n  }, [customersUIContext]);\n\n  return (\n    <Card>\n      <CardHeader title=\"Customers list\">\n        <CardHeaderToolbar>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={customersUIProps.newCustomerButtonClick}\n          >\n            New Customer\n          </button>\n        </CardHeaderToolbar>\n      </CardHeader>\n      <CardBody>\n        <CustomersFilter />\n        {customersUIProps.ids.length > 0 && <CustomersGrouping />}\n        <CustomersTable />\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { CustomersLoadingDialog } from \"./customers-loading-dialog/CustomersLoadingDialog\";\nimport { CustomerEditDialog } from \"./customer-edit-dialog/CustomerEditDialog\";\nimport { CustomerDeleteDialog } from \"./customer-delete-dialog/CustomerDeleteDialog\";\nimport { CustomersDeleteDialog } from \"./customers-delete-dialog/CustomersDeleteDialog\";\nimport { CustomersFetchDialog } from \"./customers-fetch-dialog/CustomersFetchDialog\";\nimport { CustomersUpdateStateDialog } from \"./customers-update-status-dialog/CustomersUpdateStateDialog\";\nimport { CustomersUIProvider } from \"./CustomersUIContext\";\nimport { CustomersCard } from \"./CustomersCard\";\n\nexport function CustomersPage({ history }) {\n  const customersUIEvents = {\n    newCustomerButtonClick: () => {\n      history.push(\"/e-commerce/customers/new\");\n    },\n    openEditCustomerDialog: (id) => {\n      history.push(`/e-commerce/customers/${id}/edit`);\n    },\n    openDeleteCustomerDialog: (id) => {\n      history.push(`/e-commerce/customers/${id}/delete`);\n    },\n    openDeleteCustomersDialog: () => {\n      history.push(`/e-commerce/customers/deleteCustomers`);\n    },\n    openFetchCustomersDialog: () => {\n      history.push(`/e-commerce/customers/fetch`);\n    },\n    openUpdateCustomersStatusDialog: () => {\n      history.push(\"/e-commerce/customers/updateStatus\");\n    }\n  }\n\n  return (\n    <CustomersUIProvider customersUIEvents={customersUIEvents}>\n      <CustomersLoadingDialog />\n      <Route path=\"/e-commerce/customers/new\">\n        {({ history, match }) => (\n          <CustomerEditDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/:id/edit\">\n        {({ history, match }) => (\n          <CustomerEditDialog\n            show={match != null}\n            id={match && match.params.id}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/deleteCustomers\">\n        {({ history, match }) => (\n          <CustomersDeleteDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/:id/delete\">\n        {({ history, match }) => (\n          <CustomerDeleteDialog\n            show={match != null}\n            id={match && match.params.id}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/fetch\">\n        {({ history, match }) => (\n          <CustomersFetchDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/customers/updateStatus\">\n        {({ history, match }) => (\n          <CustomersUpdateStateDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/customers\");\n            }}\n          />\n        )}\n      </Route>\n      <CustomersCard />\n    </CustomersUIProvider>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function ProductsLoadingDialog() {\n  const { isLoading } = useSelector(\n    state => ({ isLoading: state.products.listLoading }),\n    shallowEqual\n  );\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialProductsState = {\n  listLoading: false,\n  actionsLoading: false,\n  totalCount: 0,\n  entities: null,\n  productForEdit: undefined,\n  lastError: null\n};\nexport const callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\n\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState: initialProductsState,\n  reducers: {\n    catchError: (state, action) => {\n      state.error = `${action.type}: ${action.payload.error}`;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionsLoading = false;\n      }\n    },\n    startCall: (state, action) => {\n      state.error = null;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionsLoading = true;\n      }\n    },\n    // getProductById\n    productFetched: (state, action) => {\n      state.actionsLoading = false;\n      state.productForEdit = action.payload.productForEdit;\n      state.error = null;\n    },\n    // findProducts\n    productsFetched: (state, action) => {\n      const { totalCount, entities } = action.payload;\n      state.listLoading = false;\n      state.error = null;\n      state.entities = entities;\n      state.totalCount = totalCount;\n    },\n    // createProduct\n    productCreated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      state.entities.push(action.payload.product);\n    },\n    // updateProduct\n    productUpdated: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.map(entity => {\n        if (entity.id === action.payload.product.id) {\n          return action.payload.product;\n        }\n        return entity;\n      });\n    },\n    // deleteProduct\n    productDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\n    },\n    // deleteProducts\n    productsDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(\n        el => !action.payload.ids.includes(el.id)\n      );\n    },\n    // productsUpdateState\n    productsStatusUpdated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      const { ids, status } = action.payload;\n      state.entities = state.entities.map(entity => {\n        if (ids.findIndex(id => id === entity.id) > -1) {\n          entity.status = status;\n        }\n        return entity;\n      });\n    }\n  }\n});\n","import * as requestFromServer from \"./productsCrud\";\nimport {productsSlice, callTypes} from \"./productsSlice\";\n\nconst {actions} = productsSlice;\n\nexport const fetchProducts = queryParams => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.list }));\n  return requestFromServer\n    .findProducts(queryParams)\n    .then(response => {\n      const { totalCount, entities } = response.data;\n      dispatch(actions.productsFetched({ totalCount, entities }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find products\";\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\n    });\n};\n\nexport const fetchProduct = id => dispatch => {\n  if (!id) {\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\n  }\n\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .getProductById(id)\n    .then(response => {\n      const product = response.data;\n      dispatch(actions.productFetched({ productForEdit: product }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find product\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteProduct = id => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteProduct(id)\n    .then(response => {\n      dispatch(actions.productDeleted({ id }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete product\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const createProduct = productForCreation => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .createProduct(productForCreation)\n    .then(response => {\n      const { product } = response.data;\n      dispatch(actions.productCreated({ product }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't create product\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateProduct = product => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateProduct(product)\n    .then(() => {\n      dispatch(actions.productUpdated({ product }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update product\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateProductsStatus = (ids, status) => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateStatusForProducts(ids, status)\n    .then(() => {\n      dispatch(actions.productsStatusUpdated({ ids, status }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update products status\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteProducts = ids => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteProducts(ids)\n    .then(() => {\n      dispatch(actions.productsDeleted({ ids }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete products\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n","import axios from \"axios\";\n\nexport const PRODUCTS_URL = \"api/products\";\n\n// CREATE =>  POST: add a new product to the server\nexport function createProduct(product) {\n  return axios.post(PRODUCTS_URL, { product });\n}\n\n// READ\nexport function getAllProducts() {\n  return axios.get(PRODUCTS_URL);\n}\n\nexport function getProductById(productId) {\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\n}\n\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\n// items => filtered/sorted result\nexport function findProducts(queryParams) {\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\n}\n\n// UPDATE => PUT: update the procuct on the server\nexport function updateProduct(product) {\n  return axios.put(`${PRODUCTS_URL}/${product.id}`, { product });\n}\n\n// UPDATE Status\nexport function updateStatusForProducts(ids, status) {\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\n    ids,\n    status\n  });\n}\n\n// DELETE => delete the product from the server\nexport function deleteProduct(productId) {\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\n}\n\n// DELETE Products by ids\nexport function deleteProducts(ids) {\n  return axios.post(`${PRODUCTS_URL}/deleteProducts`, { ids });\n}\n","export const ProductStatusCssClasses = [\"success\", \"info\", \"\"];\nexport const ProductStatusTitles = [\"Selling\", \"Sold\"];\nexport const ProductConditionCssClasses = [\"success\", \"danger\", \"\"];\nexport const ProductConditionTitles = [\"New\", \"Used\"];\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\nexport const sizePerPageList = [\n  { text: \"3\", value: 3 },\n  { text: \"5\", value: 5 },\n  { text: \"10\", value: 10 }\n];\nexport const initialFilter = {\n  filter: {\n    model: \"\",\n    manufacture: \"\",\n    VINCode: \"\"\n  },\n  sortOrder: \"asc\", // asc||desc\n  sortField: \"VINCode\",\n  pageNumber: 1,\n  pageSize: 10\n};\nexport const AVAILABLE_COLORS = [\n  \"Red\",\n  \"CadetBlue\",\n  \"Eagle\",\n  \"Gold\",\n  \"LightSlateGrey\",\n  \"RoyalBlue\",\n  \"Crimson\",\n  \"Blue\",\n  \"Sienna\",\n  \"Indigo\",\n  \"Green\",\n  \"Violet\",\n  \"GoldenRod\",\n  \"OrangeRed\",\n  \"Khaki\",\n  \"Teal\",\n  \"Purple\",\n  \"Orange\",\n  \"Pink\",\n  \"Black\",\n  \"DarkTurquoise\"\n];\n\nexport const AVAILABLE_MANUFACTURES = [\n  \"Pontiac\",\n  \"Kia\",\n  \"Lotus\",\n  \"Subaru\",\n  \"Jeep\",\n  \"Isuzu\",\n  \"Mitsubishi\",\n  \"Oldsmobile\",\n  \"Chevrolet\",\n  \"Chrysler\",\n  \"Audi\",\n  \"Suzuki\",\n  \"GMC\",\n  \"Cadillac\",\n  \"Infinity\",\n  \"Mercury\",\n  \"Dodge\",\n  \"Ram\",\n  \"Lexus\",\n  \"Lamborghini\",\n  \"Honda\",\n  \"Nissan\",\n  \"Ford\",\n  \"Hyundai\",\n  \"Saab\",\n  \"Toyota\"\n];\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\nimport { isEqual, isFunction } from \"lodash\";\nimport { initialFilter } from \"./ProductsUIHelpers\";\n\nconst ProductsUIContext = createContext();\n\nexport function useProductsUIContext() {\n  return useContext(ProductsUIContext);\n}\n\nexport const ProductsUIConsumer = ProductsUIContext.Consumer;\n\nexport function ProductsUIProvider({ productsUIEvents, children }) {\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback((nextQueryParams) => {\n    setQueryParamsBase((prevQueryParams) => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n\n  const value = {\n    queryParams,\n    setQueryParamsBase,\n    ids,\n    setIds,\n    setQueryParams,\n    newProductButtonClick: productsUIEvents.newProductButtonClick,\n    openEditProductPage: productsUIEvents.openEditProductPage,\n    openDeleteProductDialog: productsUIEvents.openDeleteProductDialog,\n    openDeleteProductsDialog: productsUIEvents.openDeleteProductsDialog,\n    openFetchProductsDialog: productsUIEvents.openFetchProductsDialog,\n    openUpdateProductsStatusDialog:\n      productsUIEvents.openUpdateProductsStatusDialog,\n  };\n\n  return (\n    <ProductsUIContext.Provider value={value}>\n      {children}\n    </ProductsUIContext.Provider>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nexport function ProductDeleteDialog({ id, show, onHide }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  // Products Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.products.actionsLoading }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!id) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteProduct = () => {\n    // server request for deleting product by id\n    dispatch(actions.deleteProduct(id)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchProducts(productsUIProps.queryParams));\n      // clear selections list\n      productsUIProps.setIds([]);\n      // closing delete modal\n      onHide();\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Product Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete this product?</span>\n        )}\n        {isLoading && <span>Product is deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteProduct}\n            className=\"btn btn-delete btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nexport function ProductsDeleteDialog({ show, onHide }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  // Products Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.products.actionsLoading }),\n    shallowEqual\n  );\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  // if there weren't selected products we should close modal\n  useEffect(() => {\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.ids]);\n\n  const deleteProducts = () => {\n    // server request for deleting product by seleted ids\n    dispatch(actions.deleteProducts(productsUIProps.ids)).then(() => {\n      // refresh list after deletion\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\n        // clear selections list\n        productsUIProps.setIds([]);\n        // closing delete modal\n        onHide();\n      });\n    });\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Products Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete selected products?</span>\n        )}\n        {isLoading && <span>Products are deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteProducts}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nconst selectedProducts = (entities, ids) => {\n  const _products = [];\n  ids.forEach((id) => {\n    const product = entities.find((el) => el.id === id);\n    if (product) {\n      _products.push(product);\n    }\n  });\n  return _products;\n};\n\nexport function ProductsFetchDialog({ show, onHide }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  // Products Redux state\n  const { products } = useSelector(\n    (state) => ({\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\n    }),\n    shallowEqual\n  );\n\n  // if there weren't selected ids we should close modal\n  useEffect(() => {\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.ids]);\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Fetch selected elements\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\n          <div className=\"list-timeline-items\">\n            {products.map((product) => (\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\n                <span className=\"list-timeline-text\">\n                  <span\n                    className={`label label-lg label-light-${\n                      ProductStatusCssClasses[product.status]\n                    } label-inline`}\n                    style={{ width: \"60px\" }}\n                  >\n                    ID: {product.id}\n                  </span>{\" \"}\n                  <span className=\"ml-5\">\n                    {product.manufacture}, {product.model}\n                  </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Ok\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nconst selectedProducts = (entities, ids) => {\n  const _products = [];\n  ids.forEach((id) => {\n    const product = entities.find((el) => el.id === id);\n    if (product) {\n      _products.push(product);\n    }\n  });\n  return _products;\n};\n\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  // Products Redux state\n  const { products, isLoading } = useSelector(\n    (state) => ({\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\n      isLoading: state.products.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  // if there weren't selected products we should close modal\n  useEffect(() => {\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\n      onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.ids]);\n\n  const [status, setStatus] = useState(0);\n\n  const dispatch = useDispatch();\n  const updateStatus = () => {\n    // server request for updateing product by ids\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\n      () => {\n        // refresh list after deletion\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\n          () => {\n            // clear selections list\n            productsUIProps.setIds([]);\n            // closing delete modal\n            onHide();\n          }\n        );\n      }\n    );\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Status has been updated for selected products\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\n        {isLoading && (\n          <div className=\"overlay-layer bg-transparent\">\n            <div className=\"spinner spinner-lg spinner-warning\" />\n          </div>\n        )}\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\n          <div className=\"list-timeline-items\">\n            {products.map((product) => (\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\n                <span className=\"list-timeline-text\">\n                  <span\n                    className={`label label-lg label-light-${\n                      ProductStatusCssClasses[product.status]\n                    } label-inline`}\n                    style={{ width: \"60px\" }}\n                  >\n                    ID: {product.id}\n                  </span>{\" \"}\n                  <span className=\"ml-5\">\n                    {product.manufacture}, {product.model}\n                  </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer className=\"form\">\n        <div className=\"form-group\">\n          <select\n            className={`form-control ${ProductStatusCssClasses[status]}`}\n            value={status}\n            onChange={(e) => setStatus(+e.target.value)}\n          >\n            <option value=\"0\">Selling</option>\n            <option value=\"1\">Sold</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <button\n            type=\"button\"\n            onClick={onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={updateStatus}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Update Status\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { status, condition, searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  // Filter by status\n  filter.status = status !== \"\" ? +status : undefined;\n  // Filter by condition\n  filter.condition = condition !== \"\" ? +condition : undefined;\n  // Filter by all fields\n  filter.model = searchText;\n  if (searchText) {\n    filter.manufacture = searchText;\n    filter.VINCode = searchText;\n  }\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function ProductsFilter({ listLoading }) {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      setQueryParams: productsUIContext.setQueryParams,\n      queryParams: productsUIContext.queryParams,\n    };\n  }, [productsUIContext]);\n\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      productsUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\n          condition: \"\", // values => All=\"\"/New=0/Used=1\n          searchText: \"\",\n        }}\n        onSubmit={(values) => {\n          applyFilter(values);\n        }}\n      >\n        {({\n          values,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n        }) => (\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\n            <div className=\"form-group row\">\n              <div className=\"col-lg-2\">\n                <select\n                  className=\"form-control\"\n                  name=\"status\"\n                  placeholder=\"Filter by Status\"\n                  onChange={(e) => {\n                    setFieldValue(\"status\", e.target.value);\n                    handleSubmit();\n                  }}\n                  onBlur={handleBlur}\n                  value={values.status}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"0\">Selling</option>\n                  <option value=\"1\">Sold</option>\n                </select>\n                <small className=\"form-text text-muted\">\n                  <b>Filter</b> by Status\n                </small>\n              </div>\n              <div className=\"col-lg-2\">\n                <select\n                  className=\"form-control\"\n                  placeholder=\"Filter by Type\"\n                  name=\"condition\"\n                  onBlur={handleBlur}\n                  onChange={(e) => {\n                    setFieldValue(\"condition\", e.target.value);\n                    handleSubmit();\n                  }}\n                  value={values.condition}\n                >\n                  <option value=\"\">All</option>\n                  <option value=\"0\">New</option>\n                  <option value=\"1\">Used</option>\n                </select>\n                <small className=\"form-text text-muted\">\n                  <b>Filter</b> by Condition\n                </small>\n              </div>\n              <div className=\"col-lg-2\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"searchText\"\n                  placeholder=\"Search\"\n                  onBlur={handleBlur}\n                  value={values.searchText}\n                  onChange={(e) => {\n                    setFieldValue(\"searchText\", e.target.value);\n                    handleSubmit();\n                  }}\n                />\n                <small className=\"form-text text-muted\">\n                  <b>Search</b> in all fields\n                </small>\n              </div>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  ProductStatusCssClasses,\n  ProductStatusTitles\n} from \"../../ProductsUIHelpers\";\n\nexport const StatusColumnFormatter = (cellContent, row) => (\n  <span\n    className={`label label-lg label-light-${\n      ProductStatusCssClasses[row.status]\n    } label-inline`}\n  >\n    {ProductStatusTitles[row.status]}\n  </span>\n);\n","import React from \"react\";\nimport {\n  ProductConditionCssClasses,\n  ProductConditionTitles\n} from \"../../ProductsUIHelpers\";\n\nexport const ConditionColumnFormatter = (cellContent, row) => (\n  <>\n    <span\n      className={`badge badge-${\n        ProductConditionCssClasses[row.condition]\n      } badge-dot`}\n    ></span>\n    &nbsp;\n    <span\n      className={`font-bold font-${\n        ProductConditionCssClasses[row.condition]\n      }`}\n    >\n      {ProductConditionTitles[row.condition]}\n    </span>\n  </>\n);\n","import React from \"react\";\n\nexport const ColorColumnFormatter = (cellContent, row) => (\n  <span style={{ color: row.color }}>{row.color}</span>\n);\n","import React from \"react\";\n\nexport const PriceColumnFormatter = (cellContent, row) => <>${row.price}</>;\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\n\nexport const ActionsColumnFormatter = (\n  cellContent,\n  row,\n  rowIndex,\n  { openEditProductPage, openDeleteProductDialog }\n) => (\n  <>\n    <OverlayTrigger\n      overlay={<Tooltip id=\"products-edit-tooltip\">Edit product</Tooltip>}\n    >\n      <a\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n        onClick={() => openEditProductPage(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\n          />\n        </span>\n      </a>\n    </OverlayTrigger>\n\n    <> </>\n    <OverlayTrigger\n      overlay={<Tooltip id=\"products-delete-tooltip\">Delete product</Tooltip>}\n    >\n      <a\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n        onClick={() => openDeleteProductDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\n        </span>\n      </a>\n    </OverlayTrigger>\n  </>\n);\n","// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport * as uiHelpers from \"../ProductsUIHelpers\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n} from \"../../../../../../_metronic/_helpers\";\nimport * as columnFormatters from \"./column-formatters\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nexport function ProductsTable() {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\n    };\n  }, [productsUIContext]);\n\n  // Getting curret state of products list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.products }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n  // Products Redux state\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // clear selections list\n    productsUIProps.setIds([]);\n    // server call by queryParams\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsUIProps.queryParams, dispatch]);\n  // Table columns\n  const columns = [\n    {\n      dataField: \"VINCode\",\n      text: \"VIN Code (ID)\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"manufacture\",\n      text: \"Manufacture\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"model\",\n      text: \"Model\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"modelYear\",\n      text: \"Model Year\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"color\",\n      text: \"Color\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.ColorColumnFormatter,\n    },\n    {\n      dataField: \"price\",\n      text: \"Price\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.PriceColumnFormatter,\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.StatusColumnFormatter,\n    },\n    {\n      dataField: \"condition\",\n      text: \"Condition\",\n      sort: true,\n      sortCaret: sortCaret,\n      formatter: columnFormatters.ConditionColumnFormatter,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: columnFormatters.ActionsColumnFormatter,\n      formatExtraData: {\n        openEditProductPage: productsUIProps.openEditProductPage,\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n  // Table pagination properties\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: productsUIProps.queryParams.pageSize,\n    page: productsUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bootstrap4\n                bordered={false}\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  productsUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: productsUIProps.ids,\n                  setIds: productsUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\n\nexport function ProductsGrouping() {\n  // Products UI Context\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\n      openUpdateProductsStatusDialog:\n        productsUIContext.openUpdateProductsStatusDialog,\n    };\n  }, [productsUIContext]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\n        <div className=\"col-xl-12\">\n          <div className=\"form-group form-group-inline\">\n            <div className=\"form-label form-label-no-wrap\">\n              <label className=\"-font-bold font-danger-\">\n                <span>\n                  Selected records count: <b>{productsUIProps.ids.length}</b>\n                </span>\n              </label>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\n                onClick={productsUIProps.openDeleteProductsDialog}\n              >\n                <i className=\"fa fa-trash\"></i> Delete All\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={productsUIProps.openFetchProductsDialog}\n              >\n                <i className=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={productsUIProps.openUpdateProductsStatusDialog}\n              >\n                <i className=\"fa fa-sync-alt\"></i> Update Status\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {useMemo} from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardHeaderToolbar,\n} from \"../../../../../_metronic/_partials/controls\";\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\nimport { ProductsTable } from \"./products-table/ProductsTable\";\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\nimport { useProductsUIContext } from \"./ProductsUIContext\";\n\nexport function ProductsCard() {\n  const productsUIContext = useProductsUIContext();\n  const productsUIProps = useMemo(() => {\n    return {\n      ids: productsUIContext.ids,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      newProductButtonClick: productsUIContext.newProductButtonClick,\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openUpdateProductsStatusDialog:\n        productsUIContext.openUpdateProductsStatusDialog,\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\n    };\n  }, [productsUIContext]);\n\n  return (\n    <Card>\n      <CardHeader title=\"Products list\">\n        <CardHeaderToolbar>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={productsUIProps.newProductButtonClick}\n          >\n            New Product\n          </button>\n        </CardHeaderToolbar>\n      </CardHeader>\n      <CardBody>\n        <ProductsFilter />\n        {productsUIProps.ids.length > 0 && (\n          <>\n            <ProductsGrouping />\n          </>\n        )}\n        <ProductsTable />\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { ProductsLoadingDialog } from \"./products-loading-dialog/ProductsLoadingDialog\";\nimport { ProductDeleteDialog } from \"./product-delete-dialog/ProductDeleteDialog\";\nimport { ProductsDeleteDialog } from \"./products-delete-dialog/ProductsDeleteDialog\";\nimport { ProductsFetchDialog } from \"./products-fetch-dialog/ProductsFetchDialog\";\nimport { ProductsUpdateStatusDialog } from \"./products-update-status-dialog/ProductsUpdateStatusDialog\";\nimport { ProductsCard } from \"./ProductsCard\";\nimport { ProductsUIProvider } from \"./ProductsUIContext\";\n\nexport function ProductsPage({ history }) {\n  const productsUIEvents = {\n    newProductButtonClick: () => {\n      history.push(\"/e-commerce/products/new\");\n    },\n    openEditProductPage: (id) => {\n      history.push(`/e-commerce/products/${id}/edit`);\n    },\n    openDeleteProductDialog: (id) => {\n      history.push(`/e-commerce/products/${id}/delete`);\n    },\n    openDeleteProductsDialog: () => {\n      history.push(`/e-commerce/products/deleteProducts`);\n    },\n    openFetchProductsDialog: () => {\n      history.push(`/e-commerce/products/fetch`);\n    },\n    openUpdateProductsStatusDialog: () => {\n      history.push(\"/e-commerce/products/updateStatus\");\n    },\n  };\n\n  return (\n    <ProductsUIProvider productsUIEvents={productsUIEvents}>\n      <ProductsLoadingDialog />\n      <Route path=\"/e-commerce/products/deleteProducts\">\n        {({ history, match }) => (\n          <ProductsDeleteDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/products\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/products/:id/delete\">\n        {({ history, match }) => (\n          <ProductDeleteDialog\n            show={match != null}\n            id={match && match.params.id}\n            onHide={() => {\n              history.push(\"/e-commerce/products\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/products/fetch\">\n        {({ history, match }) => (\n          <ProductsFetchDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/products\");\n            }}\n          />\n        )}\n      </Route>\n      <Route path=\"/e-commerce/products/updateStatus\">\n        {({ history, match }) => (\n          <ProductsUpdateStatusDialog\n            show={match != null}\n            onHide={() => {\n              history.push(\"/e-commerce/products\");\n            }}\n          />\n        )}\n      </Route>\n      <ProductsCard />\n    </ProductsUIProvider>\n  );\n}\n","// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\nimport {\n  AVAILABLE_COLORS,\n  AVAILABLE_MANUFACTURES,\n  ProductStatusTitles,\n  ProductConditionTitles,\n} from \"../ProductsUIHelpers\";\n\n// Validation schema\nconst ProductEditSchema = Yup.object().shape({\n  model: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Model is required\"),\n  manufacture: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Manufacture is required\"),\n  modelYear: Yup.number()\n    .min(1950, \"1950 is minimum\")\n    .max(2020, \"2020 is maximum\")\n    .required(\"Model year is required\"),\n  mileage: Yup.number()\n    .min(0, \"0 is minimum\")\n    .max(1000000, \"1000000 is maximum\")\n    .required(\"Mileage is required\"),\n  color: Yup.string().required(\"Color is required\"),\n  price: Yup.number()\n    .min(1, \"$1 is minimum\")\n    .max(1000000, \"$1000000 is maximum\")\n    .required(\"Price is required\"),\n  VINCode: Yup.string().required(\"VINCode is required\"),\n});\n\nexport function ProductEditForm({\n  product,\n  btnRef,\n  saveProduct,\n}) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={product}\n        validationSchema={ProductEditSchema}\n        onSubmit={(values) => {\n          saveProduct(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Form className=\"form form-label-right\">\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    name=\"model\"\n                    component={Input}\n                    placeholder=\"Model\"\n                    label=\"Model\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"manufacture\" label=\"Color\">\n                    {AVAILABLE_MANUFACTURES.map((manufacture) => (\n                      <option key={manufacture} value={manufacture}>\n                        {manufacture}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"modelYear\"\n                    component={Input}\n                    placeholder=\"Model year\"\n                    label=\"Model year\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"mileage\"\n                    component={Input}\n                    placeholder=\"Mileage\"\n                    label=\"Mileage\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"color\" label=\"Color\">\n                    {AVAILABLE_COLORS.map((color) => (\n                      <option key={color} value={color}>\n                        {color}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Field\n                    type=\"number\"\n                    name=\"price\"\n                    component={Input}\n                    placeholder=\"Price\"\n                    label=\"Price ($)\"\n                    customFeedbackLabel=\"Please enter Price\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <div className=\"col-lg-4\">\n                  <Field\n                    name=\"VINCode\"\n                    component={Input}\n                    placeholder=\"VIN code\"\n                    label=\"VIN code\"\n                  />\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"status\" label=\"Status\">\n                    {ProductStatusTitles.map((status, index) => (\n                      <option key={status} value={index}>\n                        {status}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n                <div className=\"col-lg-4\">\n                  <Select name=\"condition\" label=\"Condition\">\n                    {ProductConditionTitles.map((condition, index) => (\n                      <option key={condition} value={index}>\n                        {condition}\n                      </option>\n                    ))}\n                  </Select>\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <label>Description</label>\n                <Field\n                  name=\"description\"\n                  as=\"textarea\"\n                  className=\"form-control\"\n                />\n              </div>\n              <button\n                type=\"submit\"\n                style={{ display: \"none\" }}\n                ref={btnRef}\n                onSubmit={() => handleSubmit()}\n              ></button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\nexport const sizePerPageList = [\n  { text: \"1\", value: 1 },\n  { text: \"3\", value: 3 },\n  { text: \"5\", value: 5 },\n];\nexport const initialFilter = {\n  filter: {\n    value: \"\",\n  },\n  sortOrder: \"asc\", // asc||desc\n  sortField: \"name\",\n  pageNumber: 1,\n  pageSize: 5,\n};\n\nexport const SPECIFICATIONS_DICTIONARY = [\n  { id: 0, name: \"Seats\" },\n  { id: 1, name: \"Fuel Type\" },\n  { id: 2, name: \"Stock\" },\n  { id: 3, name: \"Door count\" },\n  { id: 4, name: \"Engine\" },\n  { id: 5, name: \"Transmission\" },\n  { id: 6, name: \"Drivetrain\" },\n  { id: 7, name: \"Combined MPG\" },\n  { id: 8, name: \"Warranty\" },\n  { id: 9, name: \"Wheels\" },\n];\n","/* eslint-disable no-unused-vars */\nimport React, {\n  useEffect,\n  useContext,\n  createContext,\n  useState,\n  useCallback,\n} from \"react\";\nimport { isEqual, isFunction } from \"lodash\";\nimport { initialFilter } from \"./SpecificationsUIHelper\";\n\nconst SpecificationsUIContext = createContext();\n\nexport function useSpecificationsUIContext() {\n  return useContext(SpecificationsUIContext);\n}\n\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\n\nexport function SpecificationsUIProvider({ currentProductId, children }) {\n  const [productId, setProductId] = useState(currentProductId);\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback((nextQueryParams) => {\n    setQueryParamsBase((prevQueryParams) => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n  const [selectedId, setSelectedId] = useState(null);\n  const initSpecification = {\n    id: undefined,\n    value: \"\",\n    specId: 0,\n    carId: productId,\n  };\n  useEffect(() => {\n    initSpecification.carId = currentProductId;\n    initSpecification.productId = currentProductId;\n    setProductId(currentProductId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentProductId]);\n  const [\n    showEditSpecificationDialog,\n    setShowEditSpecificationDialog,\n  ] = useState(false);\n  const openNewSpecificationDialog = () => {\n    setSelectedId(undefined);\n    setShowEditSpecificationDialog(true);\n  };\n  const openEditSpecificationDialog = (id) => {\n    setSelectedId(id);\n    setShowEditSpecificationDialog(true);\n  };\n  const closeEditSpecificationDialog = () => {\n    setSelectedId(undefined);\n    setShowEditSpecificationDialog(false);\n  };\n  const [\n    showDeleteSpecificationDialog,\n    setShowDeleteSpecificationDialog,\n  ] = useState(false);\n  const openDeleteSpecificationDialog = (id) => {\n    setSelectedId(id);\n    setShowDeleteSpecificationDialog(true);\n  };\n  const closeDeleteSpecificationDialog = () => {\n    setSelectedId(undefined);\n    setShowDeleteSpecificationDialog(false);\n  };\n  const [\n    showDeleteSpecificationsDialog,\n    setShowDeleteSpecificationsDialog,\n  ] = useState(false);\n  const openDeleteSpecificationsDialog = () => {\n    setShowDeleteSpecificationsDialog(true);\n  };\n  const closeDeleteSpecificationsDialog = () => {\n    setShowDeleteSpecificationsDialog(false);\n  };\n  const [\n    showFetchSpecificationsDialog,\n    setShowFetchSpecificationsDialog,\n  ] = useState(false);\n  const openFetchSpecificationsDialog = () => {\n    setShowFetchSpecificationsDialog(true);\n  };\n  const closeFetchSpecificationsDialog = () => {\n    setShowFetchSpecificationsDialog(false);\n  };\n  const value = {\n    ids,\n    setIds,\n    productId,\n    setProductId,\n    queryParams,\n    setQueryParams,\n    initSpecification,\n    selectedId,\n    showEditSpecificationDialog,\n    openEditSpecificationDialog,\n    openNewSpecificationDialog,\n    closeEditSpecificationDialog,\n    showDeleteSpecificationDialog,\n    openDeleteSpecificationDialog,\n    closeDeleteSpecificationDialog,\n    showDeleteSpecificationsDialog,\n    openDeleteSpecificationsDialog,\n    closeDeleteSpecificationsDialog,\n    showFetchSpecificationsDialog,\n    openFetchSpecificationsDialog,\n    closeFetchSpecificationsDialog,\n  };\n\n  return (\n    <SpecificationsUIContext.Provider value={value}>\n      {children}\n    </SpecificationsUIContext.Provider>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  filter.value = searchText;\n  if (searchText) {\n    filter.name = searchText;\n  }\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function SpecificationsFilter() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      openNewSpecificationDialog: specsUIContext.openNewSpecificationDialog,\n      setQueryParams: specsUIContext.setQueryParams,\n      queryParams: specsUIContext.queryParams,\n    };\n  }, [specsUIContext]);\n\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(specsUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, specsUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      specsUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"form-filtration\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\n            <Formik\n              initialValues={{\n                searchText: \"\",\n              }}\n              onSubmit={(values) => {\n                applyFilter(values);\n              }}\n            >\n              {({\n                values,\n                handleSubmit,\n                handleBlur,\n                handleChange,\n                setFieldValue,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"searchText\"\n                      placeholder=\"Search\"\n                      onBlur={handleBlur}\n                      value={values.searchText}\n                      onChange={(e) => {\n                        setFieldValue(\"searchText\", e.target.value);\n                        handleSubmit();\n                      }}\n                    />\n                    <small className=\"form-text text-muted\">\n                      <b>Search</b> in all fields\n                    </small>\n                  </div>\n                </form>\n              )}\n            </Formik>\n          </div>\n          <div className=\"col-md-7 margin-bottom-10-mobile\"></div>\n          <div className=\"col-md-3 text-right margin-bottom-10-mobile\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => specsUIProps.openNewSpecificationDialog()}\n            >\n              Create new specification\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialSpecificationsState = {\n  listLoading: false,\n  actionsLoading: false,\n  totalCount: 0,\n  entities: null,\n  specificationForEdit: undefined,\n  lastError: null\n};\nexport const callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\n\nexport const specificationsSlice = createSlice({\n  name: \"specifications\",\n  initialState: initialSpecificationsState,\n  reducers: {\n    catchError: (state, action) => {\n      state.error = `${action.type}: ${action.payload.error}`;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionsLoading = false;\n      }\n    },\n    startCall: (state, action) => {\n      state.error = null;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionsLoading = true;\n      }\n    },\n    // getSpecificationById\n    specificationFetched: (state, action) => {\n      state.actionsLoading = false;\n      state.specificationForEdit = action.payload.specificationForEdit;\n      state.error = null;\n    },\n    // findSpecifications\n    specificationsFetched: (state, action) => {\n      const { totalCount, entities } = action.payload;\n      state.listLoading = false;\n      state.error = null;\n      state.entities = entities;\n      state.totalCount = totalCount;\n    },\n    // createSpecification\n    specificationCreated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      state.entities.push(action.payload.specification);\n    },\n    // updateSpecification\n    specificationUpdated: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.map(entity => {\n        if (entity.id === action.payload.specification.id) {\n          return action.payload.specification;\n        }\n        return entity;\n      });\n    },\n    // deleteSpecification\n    specificationDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\n    },\n    // deleteSpecifications\n    specificationsDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(\n        el => !action.payload.ids.includes(el.id)\n      );\n    }\n  }\n});\n","import * as requestFromServer from \"./specificationsCrud\";\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\n\nconst {actions} = specificationsSlice;\n\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.list }));\n  if (!productId) {\n    return dispatch(\n      actions.specificationsFetched({ totalCount: 0, entities: null })\n    );\n  }\n\n  return requestFromServer\n    .findSpecifications(queryParams, productId)\n    .then(response => {\n      const { totalCount, entities } = response.data;\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find specifications\";\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\n    });\n};\n\nexport const fetchSpecification = id => dispatch => {\n  if (!id) {\n    return dispatch(\n      actions.specificationFetched({ specificationForEdit: undefined })\n    );\n  }\n\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .getSpecificationById(id)\n    .then(response => {\n      const specification = response.data;\n      dispatch(\n        actions.specificationFetched({ specificationForEdit: specification })\n      );\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find specification\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteSpecification = id => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteSpecification(id)\n    .then(response => {\n      dispatch(actions.specificationDeleted({ id }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete specification\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const createSpecification = specificationForCreation => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .createSpecification(specificationForCreation)\n    .then(response => {\n      const { specification } = response.data;\n      dispatch(actions.specificationCreated({ specification }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't create specification\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateSpecification = specification => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateSpecification(specification)\n    .then(() => {\n      dispatch(actions.specificationUpdated({ specification }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update specification\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteSpecifications = ids => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteSpecifications(ids)\n    .then(() => {\n      dispatch(actions.specificationsDeleted({ ids }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete specifications\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n","import axios from \"axios\";\n\nexport const SPECIFICATIONS_URL = \"api/specifications\";\n\n// CREATE =>  POST: add a new specifications to the server\nexport function createSpecification(specification) {\n  return axios.post(SPECIFICATIONS_URL, { specification });\n}\n\n// READ\n// Server should return filtered specifications by productId\nexport function getAllProductSpecificationsByProductId(productId) {\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\n}\n\nexport function getSpecificationById(specificationId) {\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\n}\n\n// Server should return sorted/filtered specifications and merge with items from state\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\nexport function findSpecifications(queryParams, productId) {\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\n}\n\n// UPDATE => PUT: update the specification\nexport function updateSpecification(specification) {\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\n    specification\n  });\n}\n\n// DELETE => delete the specification\nexport function deleteSpecification(specificationId) {\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\n}\n\n// DELETE specifications by ids\nexport function deleteSpecifications(ids) {\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\n}\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\n\nexport function ActionsColumnFormatter(\n  cellContent,\n  row,\n  rowIndex,\n  { openEditSpecificationDialog, openDeleteSpecificationDialog }\n) {\n  return (\n    <>\n      <OverlayTrigger\n        overlay={<Tooltip id=\"specs-edit-tooltip\">Edit specification</Tooltip>}\n      >\n        <a\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n          onClick={() => openEditSpecificationDialog(row.id)}\n        >\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <SVG\n              src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\n            />\n          </span>\n        </a>\n      </OverlayTrigger>\n\n      <> </>\n      <OverlayTrigger\n        overlay={\n          <Tooltip id=\"spec-delete-tooltip\">Delete specification</Tooltip>\n        }\n      >\n        <a\n          className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n          onClick={() => openDeleteSpecificationDialog(row.id)}\n        >\n          <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n            <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\n          </span>\n        </a>\n      </OverlayTrigger>\n    </>\n  );\n}\n","// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n} from \"../../../../../../_metronic/_helpers\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function SpecificationsTable() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      queryParams: specsUIContext.queryParams,\n      setQueryParams: specsUIContext.setQueryParams,\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\n      openDeleteSpecificationDialog:\n        specsUIContext.openDeleteSpecificationDialog,\n      ids: specsUIContext.ids,\n      setIds: specsUIContext.setIds,\n      productId: specsUIContext.productId,\n    };\n  }, [specsUIContext]);\n\n  // Specs Redux state\n  // Getting curret state of products list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.specifications }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    specsUIProps.setIds([]);\n    dispatch(\n      actions.fetchSpecifications(specsUIProps.queryParams,specsUIProps.productId)\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\n\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Specification Type\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"value\",\n      text: \"Value\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\n        openDeleteSpecificationDialog:\n          specsUIProps.openDeleteSpecificationDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n  // Table pagination properties\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: specsUIProps.queryParams.pageSize,\n    page: specsUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bordered={false}\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  specsUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: specsUIProps.ids,\n                  setIds: specsUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\n\nexport function SpecificationsLoadingDialog() {\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.specifications.listLoading }),\n    shallowEqual\n  );\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function SpecificationsDeleteDialog() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      productId: specsUIContext.productId,\n      ids: specsUIContext.ids,\n      show: specsUIContext.showDeleteSpecificationsDialog,\n      onHide: specsUIContext.closeDeleteSpecificationsDialog,\n      setIds: specsUIContext.setIds,\n      queryParams: specsUIContext.queryParams,\n    };\n  }, [specsUIContext]);\n\n  // Specs Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\n    shallowEqual\n  );\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  // if there weren't selected specs we should close modal\n  useEffect(() => {\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\n      specsUIProps.onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.ids]);\n\n  const deleteSpecifications = () => {\n    // server request for selected deleting specs\n    dispatch(actions.deleteSpecifications(specsUIProps.ids)).then(() => {\n      // refresh list after deletion\n      dispatch(\n        actions.fetchSpecifications(\n          specsUIProps.queryParams,\n          specsUIProps.productId\n        )\n      ).then(() => {\n        specsUIProps.setIds([]);\n        specsUIProps.onHide();\n      });\n    });\n  };\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Specifications Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>\n            Are you sure to permanently delete selected specifications?\n          </span>\n        )}\n        {isLoading && <span>Specifications are deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={specsUIProps.onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteSpecifications}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function SpecificationDeleteDialog() {\n  // Specifications UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      id: specsUIContext.selectedId,\n      productId: specsUIContext.productId,\n      show: specsUIContext.showDeleteSpecificationDialog,\n      onHide: specsUIContext.closeDeleteSpecificationDialog,\n      queryParams: specsUIContext.queryParams,\n      setIds: specsUIContext.setIds,\n    };\n  }, [specsUIContext]);\n\n  // Specs Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!specsUIProps.id) {\n      specsUIProps.onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.id]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteSpecification = () => {\n    // server request for deleting spec by id\n    dispatch(actions.deleteSpecification(specsUIProps.id)).then(() => {\n      // refresh list after deletion\n      dispatch(\n        actions.fetchSpecifications(\n          specsUIProps.queryParams,\n          specsUIProps.productId\n        )\n      );\n      specsUIProps.setIds([]);\n      specsUIProps.onHide();\n    });\n  };\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Specification Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete this specification?</span>\n        )}\n        {isLoading && <span>Specification is deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={specsUIProps.onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteSpecification}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nconst selectedSpecifications = (entities, ids) => {\n  const _specifications = [];\n  ids.forEach((id) => {\n    const specification = entities.find((el) => el.id === id);\n    if (specification) {\n      _specifications.push(specification);\n    }\n  });\n  return _specifications;\n};\n\nexport function SpecificationsFetchDialog() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      ids: specsUIContext.ids,\n      show: specsUIContext.showFetchSpecificationsDialog,\n      onHide: specsUIContext.closeFetchSpecificationsDialog,\n      queryParams: specsUIContext.queryParams,\n    };\n  }, [specsUIContext]);\n\n  // Specs Redux state\n  const { specifications } = useSelector(\n    (state) => ({\n      specifications: selectedSpecifications(\n        state.specifications.entities,\n        specsUIProps.ids\n      ),\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\n      specsUIProps.onHide();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [specsUIProps.ids]);\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Fetch selected elements\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\n          <div className=\"list-timeline-items\">\n            {specifications.map((specification) => (\n              <div className=\"list-timeline-item mb-3\" key={specification.id}>\n                <span className=\"list-timeline-text\">\n                  <span\n                    className=\"label label-lg label-light-success label-inline\"\n                    style={{ width: \"60px\" }}\n                  >\n                    ID: {specification.id}\n                  </span>{\" \"}\n                  <span className=\"ml-5\">\n                    {specification.name}: {specification.value}{\" \"}\n                  </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={specsUIProps.onHide}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={specsUIProps.onHide}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Ok\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function SpecificationsGrouping() {\n  // Specs UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      ids: specsUIContext.ids,\n      openDeleteSpecificationsDialog:\n        specsUIContext.openDeleteSpecificationsDialog,\n      openFetchSpecificationsDialog:\n        specsUIContext.openFetchSpecificationsDialog,\n    };\n  }, [specsUIContext]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\n        <div className=\"col-xl-12\">\n          <div className=\"form-group form-group-inline\">\n            <div className=\"form-label form-label-no-wrap\">\n              <label className=\"font-bold font-danger mt-5\">\n                <span>Selected records count: {specsUIProps.ids.length}</span>\n              </label>\n            </div>\n            <div className=\"form-group-inline\">\n              <button\n                type=\"button\"\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\n                onClick={specsUIProps.openDeleteSpecificationsDialog}\n              >\n                <i className=\"fa fa-trash\"></i> Delete All\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={specsUIProps.openFetchSpecificationsDialog}\n              >\n                <i className=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useState, useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\n\nexport function SpecificationEditDialogHeader({ id }) {\n  const [title, setTitle] = useState(\"\");\n  // Specs Redux state\n  const { specificationForEdit, actionsLoading } = useSelector(\n    (state) => ({\n      specificationForEdit: state.specifications.specificationForEdit,\n      actionsLoading: state.specifications.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Specification\";\n    if (specificationForEdit && id) {\n      _title = \"Edit Specification\";\n    }\n\n    setTitle(_title);\n    // eslint-disable-next-line\n  }, [specificationForEdit, actionsLoading]);\n  return (\n    <>\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\n      </Modal.Header>\n    </>\n  );\n}\n","// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Select,\n  Input,\n} from \"../../../../../../../_metronic/_partials/controls\";\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\n\n// Validation schema\nconst SpecificationEditSchema = Yup.object().shape({\n  value: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Value is required\"),\n  specId: Yup.number().required(\"Specification type is required\"),\n});\n\nexport function SpecificationEditForm({\n  saveSpecification,\n  specification,\n  actionsLoading,\n  onHide,\n}) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={specification}\n        validationSchema={SpecificationEditSchema}\n        onSubmit={(values) => {\n          saveSpecification(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\n              {actionsLoading && (\n                <div className=\"overlay-layer bg-transparent\">\n                  <div className=\"spinner spinner-lg spinner-success\" />\n                </div>\n              )}\n              <Form className=\"form form-label-right\">\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Select name=\"specId\" label=\"Specification Type\">\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\n                        <option key={spec.id} value={spec.id}>\n                          {spec.name}\n                        </option>\n                      ))}\n                    </Select>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Field\n                      name=\"value\"\n                      component={Input}\n                      placeholder=\"Value\"\n                      label=\"Value\"\n                    />\n                  </div>\n                </div>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                type=\"button\"\n                onClick={onHide}\n                className=\"btn btn-light btn-elevate\"\n              >\n                Cancel\n              </button>\n              <> </>\n              <button\n                type=\"submit\"\n                onClick={() => handleSubmit()}\n                className=\"btn btn-primary btn-elevate\"\n              >\n                Save\n              </button>\n            </Modal.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\n\nexport function SpecificationEditDialog() {\n  // Specifications UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return {\n      id: specsUIContext.selectedId,\n      show: specsUIContext.showEditSpecificationDialog,\n      onHide: specsUIContext.closeEditSpecificationDialog,\n      productId: specsUIContext.productId,\n      queryParams: specsUIContext.queryParams,\n      initSpecification: specsUIContext.initSpecification,\n    };\n  }, [specsUIContext]);\n\n  // Specifications Redux state\n  const dispatch = useDispatch();\n  const { actionsLoading, specificationForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.specifications.actionsLoading,\n      specificationForEdit: state.specifications.specificationForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // server request for getting spec by seleted id\n    dispatch(actions.fetchSpecification(specsUIProps.id));\n  }, [specsUIProps.id, dispatch]);\n\n  const saveSpecification = (specification) => {\n    if (!specsUIProps.id) {\n      dispatch(actions.createSpecification(specification)).then(() => {\n        dispatch(\n          actions.fetchSpecifications(\n            specsUIProps.queryParams,\n            specsUIProps.productId\n          )\n        ).then(() => specsUIProps.onHide());\n      });\n    } else {\n      dispatch(actions.updateSpecification(specification)).then(() => {\n        dispatch(\n          actions.fetchSpecifications(\n            specsUIProps.queryParams,\n            specsUIProps.productId\n          )\n        ).then(() => specsUIProps.onHide());\n      });\n    }\n  };\n\n  return (\n    <Modal\n      show={specsUIProps.show}\n      onHide={specsUIProps.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\n      <SpecificationEditForm\n        saveSpecification={saveSpecification}\n        actionsLoading={actionsLoading}\n        specification={specificationForEdit || specsUIProps.initSpecification}\n        onHide={specsUIProps.onHide}\n      />\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { SpecificationsFilter } from \"./SpecificationsFilter\";\nimport { SpecificationsTable } from \"./SpecificationsTable\";\nimport { SpecificationsLoadingDialog } from \"./SpecificationsLoadingDialog\";\nimport { SpecificationsDeleteDialog } from \"./SpecificationsDeleteDialog\";\nimport { SpecificationDeleteDialog } from \"./SpecificationDeleteDialog\";\nimport { SpecificationsFetchDialog } from \"./SpecificationsFetchDialog\";\nimport { SpecificationsGrouping } from \"./SpecificationsGrouping\";\nimport { SpecificationEditDialog } from \"./specification-edit-dialog/SpecificationEditDialog\";\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\n\nexport function Specifications() {\n  // Specifications UI Context\n  const specsUIContext = useSpecificationsUIContext();\n  const specsUIProps = useMemo(() => {\n    return { ids: specsUIContext.ids };\n  }, [specsUIContext]);\n\n  return (\n    <>\n      <SpecificationsLoadingDialog />\n      <SpecificationEditDialog />\n      <SpecificationDeleteDialog />\n      <SpecificationsDeleteDialog />\n      <SpecificationsFetchDialog />\n      <div className=\"form margin-b-30\">\n        <SpecificationsFilter />\n        {specsUIProps.ids.length > 0 && (\n          <>\n            <SpecificationsGrouping />\n            <br />\n          </>\n        )}\n      </div>\n      <SpecificationsTable />\n    </>\n  );\n}\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\nexport const sizePerPageList = [\n  { text: \"1\", value: 1 },\n  { text: \"3\", value: 3 },\n  { text: \"5\", value: 5 }\n];\nexport const initialFilter = {\n  filter: {\n    text: \"\"\n  },\n  sortOrder: \"asc\", // asc||desc\n  sortField: \"id\",\n  pageNumber: 1,\n  pageSize: 5\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\nimport {isEqual, isFunction} from \"lodash\";\nimport {initialFilter} from \"./RemarksUIHelper\";\n\nconst RemarksUIContext = createContext();\n\nexport function useRemarksUIContext() {\n  return useContext(RemarksUIContext);\n}\n\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\n\nexport function RemarksUIProvider({ currentProductId, children }) {\n  const [productId, setProductId] = useState(currentProductId);\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\n  const [ids, setIds] = useState([]);\n  const setQueryParams = useCallback(nextQueryParams => {\n    setQueryParamsBase(prevQueryParams => {\n      if (isFunction(nextQueryParams)) {\n        nextQueryParams = nextQueryParams(prevQueryParams);\n      }\n\n      if (isEqual(prevQueryParams, nextQueryParams)) {\n        return prevQueryParams;\n      }\n\n      return nextQueryParams;\n    });\n  }, []);\n  const [selectedId, setSelectedId] = useState(null);\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\n  const initRemark = {\n    id: undefined,\n    text: \"\",\n    type: 0,\n    dueDate: \"01/07/2020\",\n    carId: productId\n  };\n  useEffect(()=> {\n    initRemark.productId = currentProductId;\n    initRemark.carId = currentProductId;\n    setProductId(currentProductId);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentProductId]);\n  const openNewRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowEditRemarkDialog(true);\n  };\n  const openEditRemarkDialog = id => {\n    setSelectedId(id);\n    setShowEditRemarkDialog(true);\n  };\n  const closeEditRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowEditRemarkDialog(false);\n  };\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\n  const openDeleteRemarkDialog = id => {\n    setSelectedId(id);\n    setShowDeleteRemarkDialog(true);\n  };\n  const closeDeleteRemarkDialog = () => {\n    setSelectedId(undefined);\n    setShowDeleteRemarkDialog(false);\n  };\n\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\n  const openDeleteRemarksDialog = () => {\n    setShowDeleteRemarksDialog(true);\n  };\n  const closeDeleteRemarksDialog = () => {\n    setShowDeleteRemarksDialog(false);\n  };\n\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\n  const openFetchRemarksDialog = () => {\n    setShowFetchRemarksDialog(true);\n  };\n  const closeFetchRemarksDialog = () => {\n    setShowFetchRemarksDialog(false);\n  };\n\n  const value = {\n    ids,\n    setIds,\n    productId,\n    setProductId,\n    queryParams,\n    setQueryParams,\n    initRemark,\n    selectedId,\n    showEditRemarkDialog,\n    openNewRemarkDialog,    \n    openEditRemarkDialog,\n    closeEditRemarkDialog,\n    showDeleteRemarkDialog,\n    openDeleteRemarkDialog,\n    closeDeleteRemarkDialog,\n    showDeleteRemarksDialog,\n    openDeleteRemarksDialog,\n    closeDeleteRemarksDialog,\n    openFetchRemarksDialog,\n    closeFetchRemarksDialog,\n    showFetchRemarksDialog\n  };\n  \n  return (\n    <RemarksUIContext.Provider value={value}>\n      {children}\n    </RemarksUIContext.Provider>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nconst prepareFilter = (queryParams, values) => {\n  const { searchText } = values;\n  const newQueryParams = { ...queryParams };\n  const filter = {};\n  filter.text = searchText;\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function RemarksFilter() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      setQueryParams: remarksUIContext.setQueryParams,\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\n      queryParams: remarksUIContext.queryParams,\n    };\n  }, [remarksUIContext]);\n\n  const applyFilter = (values) => {\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      remarksUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"form-filtration\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\n            <Formik\n              initialValues={{\n                searchText: \"\",\n              }}\n              onSubmit={(values) => {\n                applyFilter(values);\n              }}\n            >\n              {({\n                values,\n                handleSubmit,\n                handleBlur,\n                handleChange,\n                setFieldValue,\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <div>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"searchText\"\n                      placeholder=\"Search\"\n                      onBlur={handleBlur}\n                      value={values.searchText}\n                      onChange={(e) => {\n                        setFieldValue(\"searchText\", e.target.value);\n                        handleSubmit();\n                      }}\n                    />\n                    <small className=\"form-text text-muted\">\n                      <b>Search</b> in all fields\n                    </small>\n                  </div>\n                </form>\n              )}\n            </Formik>\n          </div>\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\n            >\n              Create new remark\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialRemarksState = {\n  listLoading: false,\n  actionsLoading: false,\n  totalCount: 0,\n  entities: null,\n  remarkForEdit: undefined,\n  lastError: null\n};\nexport const callTypes = {\n  list: \"list\",\n  action: \"action\"\n};\n\nexport const remarksSlice = createSlice({\n  name: \"remarks\",\n  initialState: initialRemarksState,\n  reducers: {\n    catchError: (state, action) => {\n      state.error = `${action.type}: ${action.payload.error}`;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = false;\n      } else {\n        state.actionsLoading = false;\n      }\n    },\n    startCall: (state, action) => {\n      state.error = null;\n      if (action.payload.callType === callTypes.list) {\n        state.listLoading = true;\n      } else {\n        state.actionsLoading = true;\n      }\n    },\n    // getRemarkById\n    remarkFetched: (state, action) => {\n      state.actionsLoading = false;\n      state.remarkForEdit = action.payload.remarkForEdit;\n      state.error = null;\n    },\n    // findRemarks\n    remarksFetched: (state, action) => {\n      const { totalCount, entities } = action.payload;\n      state.listLoading = false;\n      state.error = null;\n      state.entities = entities;\n      state.totalCount = totalCount;\n    },\n    // createRemark\n    remarkCreated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      state.entities.push(action.payload.remark);\n    },\n    // updateRemark\n    remarkUpdated: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.map(entity => {\n        if (entity.id === action.payload.remark.id) {\n          return action.payload.remark;\n        }\n        return entity;\n      });\n    },\n    // deleteRemark\n    remarkDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\n    },\n    // deleteRemarks\n    remarksDeleted: (state, action) => {\n      state.error = null;\n      state.actionsLoading = false;\n      state.entities = state.entities.filter(\n        el => !action.payload.ids.includes(el.id)\n      );\n    },\n    // remarksUpdateState\n    remarksStatusUpdated: (state, action) => {\n      state.actionsLoading = false;\n      state.error = null;\n      const { ids, status } = action.payload;\n      state.entities = state.entities.map(entity => {\n        if (ids.findIndex(id => id === entity.id) > -1) {\n          entity.status = status;\n        }\n        return entity;\n      });\n    }\n  }\n});\n","import * as requestFromServer from \"./remarksCrud\";\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\n\nconst {actions} = remarksSlice;\n\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.list }));\n  if (!productId) {\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\n  }\n\n  return requestFromServer\n    .findRemarks(queryParams, productId)\n    .then(response => {\n      const { totalCount, entities } = response.data;\n      dispatch(actions.remarksFetched({ totalCount, entities }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find remarks\";\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\n    });\n};\n\nexport const fetchRemark = id => dispatch => {\n  if (!id) {\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\n  }\n\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .getRemarkById(id)\n    .then(response => {\n      const remark = response.data;\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't find remark\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteRemark = id => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteRemark(id)\n    .then(response => {\n      dispatch(actions.remarkDeleted({ id }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete remark\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const createRemark = remarkForCreation => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .createRemark(remarkForCreation)\n    .then(response => {\n      const { remark } = response.data;\n      dispatch(actions.remarkCreated({ remark }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't create remark\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const updateRemark = remark => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .updateRemark(remark)\n    .then(() => {\n      dispatch(actions.remarkUpdated({ remark }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't update remark\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n\nexport const deleteRemarks = ids => dispatch => {\n  dispatch(actions.startCall({ callType: callTypes.action }));\n  return requestFromServer\n    .deleteRemarks(ids)\n    .then(() => {\n      console.log(\"delete return\");\n      dispatch(actions.remarksDeleted({ ids }));\n    })\n    .catch(error => {\n      error.clientMessage = \"Can't delete remarks\";\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\n    });\n};\n","import axios from \"axios\";\n\nexport const REMARKS_URL = \"api/remarks\";\n\n// CREATE =>  POST: add a new remark to the server\nexport function createRemark(remark) {\n  return axios.post(REMARKS_URL, { remark });\n}\n\n// READ\n// Server should return filtered remarks by productId\nexport function getAllProductRemarksByProductId(productId) {\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\n}\n\nexport function getRemarkById(remarkId) {\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\n}\n\n// Server should return sorted/filtered remarks and merge with items from state\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\nexport function findRemarks(queryParams, productId) {\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\n}\n\n// UPDATE => PUT: update the remark\nexport function updateRemark(remark) {\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\n}\n\n// DELETE => delete the remark\nexport function deleteRemark(remarkId) {\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\n}\n\n// DELETE Remarks by ids\nexport function deleteRemarks(ids) {\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\n}\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\n\nexport const ActionsColumnFormatter = (\n  cellContent,\n  row,\n  rowIndex,\n  { openEditRemarkDialog, openDeleteRemarkDialog }\n) => (\n  <>\n    <OverlayTrigger\n      overlay={<Tooltip id=\"customers-edit-tooltip\">Edit remark</Tooltip>}\n    >\n      <a\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\n        onClick={() => openEditRemarkDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\n          />\n        </span>\n      </a>\n    </OverlayTrigger>\n\n    <> </>\n    <OverlayTrigger\n      overlay={<Tooltip id=\"customers-delete-tooltip\">Delete remark</Tooltip>}\n    >\n      <a\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\n        onClick={() => openDeleteRemarkDialog(row.id)}\n      >\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\n        </span>\n      </a>\n    </OverlayTrigger>\n  </>\n);\n","// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\";\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\nimport * as uiHelpers from \"./RemarksUIHelper\";\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\nimport {\n  getSelectRow,\n  getHandlerTableChange,\n  NoRecordsFoundMessage,\n  PleaseWaitMessage,\n  sortCaret,\n} from \"../../../../../../_metronic/_helpers\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarksTable() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      setIds: remarksUIContext.setIds,\n      queryParams: remarksUIContext.queryParams,\n      setQueryParams: remarksUIContext.setQueryParams,\n      productId: remarksUIContext.productId,\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog,\n    };\n  }, [remarksUIContext]);\n\n  // Getting curret state of products list from store (Redux)\n  const { currentState } = useSelector(\n    (state) => ({ currentState: state.remarks }),\n    shallowEqual\n  );\n  const { totalCount, entities, listLoading } = currentState;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    remarksUIProps.setIds([]);\n    dispatch(\n      actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"ID\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"text\",\n      text: \"Text\",\n      sort: true,\n      sortCaret: sortCaret,\n    },\n    {\n      dataField: \"dueDate\",\n      text: \"Due date\",\n      sort: false,\n    },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\n        openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog,\n      },\n      classes: \"text-right pr-0\",\n      headerClasses: \"text-right pr-3\",\n      style: {\n        minWidth: \"100px\",\n      },\n    },\n  ];\n\n  const paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: remarksUIProps.queryParams.pageSize,\n    page: remarksUIProps.queryParams.pageNumber,\n  };\n  return (\n    <>\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\n        {({ paginationProps, paginationTableProps }) => {\n          return (\n            <Pagination\n              isLoading={listLoading}\n              paginationProps={paginationProps}\n            >\n              <BootstrapTable\n                wrapperClasses=\"table-responsive\"\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                bordered={false}\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={entities === null ? [] : entities}\n                columns={columns}\n                defaultSorted={uiHelpers.defaultSorted}\n                onTableChange={getHandlerTableChange(\n                  remarksUIProps.setQueryParams\n                )}\n                selectRow={getSelectRow({\n                  entities,\n                  ids: remarksUIProps.ids,\n                  setIds: remarksUIProps.setIds,\n                })}\n                {...paginationTableProps}\n              >\n                <PleaseWaitMessage entities={entities} />\n                <NoRecordsFoundMessage entities={entities} />\n              </BootstrapTable>\n            </Pagination>\n          );\n        }}\n      </PaginationProvider>\n    </>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\n\nexport function RemarksLoadingDialog() {\n  const { isLoading } = useSelector(\n    state => ({ isLoading: state.remarks.listLoading }),\n    shallowEqual\n  );\n  useEffect(() => {}, [isLoading]);\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarksDeleteDialog() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      setIds: remarksUIContext.setIds,\n      productId: remarksUIContext.productId,\n      queryParams: remarksUIContext.queryParams,\n      showDeleteRemarksDialog: remarksUIContext.showDeleteRemarksDialog,\n      closeDeleteRemarksDialog: remarksUIContext.closeDeleteRemarksDialog,\n    };\n  }, [remarksUIContext]);\n\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\n    shallowEqual\n  );\n\n  useEffect(() => {}, [isLoading, dispatch]);\n  useEffect(() => {\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\n      remarksUIProps.closeDeleteRemarksDialog();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.ids]);\n\n  const deleteRemarks = () => {\n    dispatch(actions.deleteRemarks(remarksUIProps.ids)).then(() => {\n      dispatch(\n        actions.fetchRemarks(\n          remarksUIProps.queryParams,\n          remarksUIProps.productId\n        )\n      ).then(() => {\n        remarksUIProps.setIds([]);\n        remarksUIProps.closeDeleteRemarksDialog();\n      });\n    });\n  };\n\n  return (\n    <Modal\n      show={remarksUIProps.showDeleteRemarksDialog}\n      onHide={remarksUIProps.closeDeleteRemarksDialog}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Remarks Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete selected remarks?</span>\n        )}\n        {isLoading && <span>Remarks are deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={remarksUIProps.closeDeleteRemarksDialog}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteRemarks}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarkDeleteDialog() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      id: remarksUIContext.selectedId,\n      setIds: remarksUIContext.setIds,\n      productId: remarksUIContext.productId,\n      queryParams: remarksUIContext.queryParams,\n      showDeleteRemarkDialog: remarksUIContext.showDeleteRemarkDialog,\n      closeDeleteRemarkDialog: remarksUIContext.closeDeleteRemarkDialog,\n    };\n  }, [remarksUIContext]);\n\n  // Remarks Redux state\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\n    shallowEqual\n  );\n\n  // if !id we should close modal\n  useEffect(() => {\n    if (!remarksUIProps.id) {\n      remarksUIProps.closeDeleteRemarkDialog();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.id]);\n\n  // looking for loading/dispatch\n  useEffect(() => {}, [isLoading, dispatch]);\n\n  const deleteRemark = () => {\n    // server request for deleting remark by id\n    dispatch(actions.deleteRemark(remarksUIProps.id)).then(() => {\n      // refresh list after deletion\n      dispatch(\n        actions.fetchRemarks(\n          remarksUIProps.queryParams,\n          remarksUIProps.productId\n        )\n      );\n      // clear selections list\n      remarksUIProps.setIds([]);\n      // closing delete modal\n      remarksUIProps.closeDeleteRemarkDialog();\n    });\n  };\n\n  return (\n    <Modal\n      show={remarksUIProps.showDeleteRemarkDialog}\n      onHide={remarksUIProps.closeDeleteRemarkDialog}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      {isLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Remark Delete\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!isLoading && (\n          <span>Are you sure to permanently delete this remark?</span>\n        )}\n        {isLoading && <span>Remark is deleting...</span>}\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={remarksUIProps.closeDeleteRemarkDialog}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={deleteRemark}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Delete\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nconst selectedRemarks = (entities, ids) => {\n  const _remarks = [];\n  ids.forEach((id) => {\n    const remark = entities.find((el) => el.id === id);\n    if (remark) {\n      _remarks.push(remark);\n    }\n  });\n  return _remarks;\n};\n\nexport function RemarksFetchDialog() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      queryParams: remarksUIContext.queryParams,\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog,\n    };\n  }, [remarksUIContext]);\n\n  const { remarks } = useSelector(\n    (state) => ({\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids),\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\n      remarksUIProps.closeFetchRemarksDialog();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remarksUIProps.ids]);\n\n  return (\n    <Modal\n      show={remarksUIProps.showFetchRemarksDialog}\n      onHide={remarksUIProps.closeFetchRemarksDialog}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          Fetch selected elements\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\n          <div className=\"list-timeline-items\">\n            {remarks.map((remark) => (\n              <div className=\"list-timeline-item mb-3\" key={remark.id}>\n                <span className=\"list-timeline-text\">\n                  <span\n                    className=\"label label-lg label-light-success label-inline\"\n                    style={{ width: \"60px\" }}\n                  >\n                    ID: {remark.id}\n                  </span>{\" \"}\n                  <span className=\"ml-5\">{remark.text} </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div>\n          <button\n            type=\"button\"\n            onClick={remarksUIProps.closeFetchRemarksDialog}\n            className=\"btn btn-light btn-elevate\"\n          >\n            Cancel\n          </button>\n          <> </>\n          <button\n            type=\"button\"\n            onClick={remarksUIProps.closeFetchRemarksDialog}\n            className=\"btn btn-primary btn-elevate\"\n          >\n            Ok\n          </button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function RemarksGrouping() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      ids: remarksUIContext.ids,\n      openDeleteRemarksDialog: remarksUIContext.openDeleteRemarksDialog,\n      openFetchRemarksDialog: remarksUIContext.openFetchRemarksDialog,\n    };\n  }, [remarksUIContext]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\n        <div className=\"col-xl-12\">\n          <div className=\"form-group form-group-inline\">\n            <div className=\"form-label form-label-no-wrap\">\n              <label className=\"font-bold font-danger mt-5\">\n                <span>Selected records count: {remarksUIProps.ids.length}</span>\n              </label>\n            </div>\n            <div className=\"form-group-inline\">\n              <button\n                type=\"button\"\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\n                onClick={remarksUIProps.openDeleteRemarksDialog}\n              >\n                <i className=\"fa fa-trash\"></i> Delete All\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\n                onClick={remarksUIProps.openFetchRemarksDialog}\n              >\n                <i className=\"fa fa-stream\"></i> Fetch Selected\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable no-restricted-imports */\nimport React, { useState, useEffect } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\n\nexport function RemarkEditDialogHeader({ id }) {\n  const [title, setTitle] = useState(\"\");\n  // Remarks Redux state\n  const { remarkForEdit, actionsLoading } = useSelector(\n    (state) => ({\n      remarkForEdit: state.remarks.remarkForEdit,\n      actionsLoading: state.remarks.actionsLoading,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Remark\";\n    if (remarkForEdit && id) {\n      _title = \"Edit remark\";\n    }\n\n    setTitle(_title);\n    // eslint-disable-next-line\n  }, [remarkForEdit, actionsLoading]);\n\n  return (\n    <>\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\n      </Modal.Header>\n    </>\n  );\n}\n","// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Input,\n  Select,\n  DatePickerField,\n} from \"../../../../../../../_metronic/_partials/controls\";\n\n// Validation schema\nconst RemarkEditSchema = Yup.object().shape({\n  text: Yup.string()\n    .min(2, \"Minimum 2 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Text is required\"),\n  type: Yup.number().required(\"Type is required\"),\n  dueDate: Yup.mixed()\n    .nullable(false)\n    .required(\"Due date is required\"),\n});\n\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={remark}\n        validationSchema={RemarkEditSchema}\n        onSubmit={(values) => saveRemark(values)}\n      >\n        {({ handleSubmit }) => (\n          <>\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\n              {actionsLoading && (\n                <div className=\"overlay-layer bg-transparent\">\n                  <div className=\"spinner spinner-lg spinner-success\" />\n                </div>\n              )}\n              <Form className=\"form form-label-right\">\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Field\n                      name=\"text\"\n                      component={Input}\n                      placeholder=\"Text\"\n                      label=\"Text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <div className=\"col-lg-12\">\n                    <Select name=\"type\" label=\"Type\">\n                      <option value=\"0\">Info</option>\n                      <option value=\"1\">Note</option>\n                      <option value=\"2\">Reminder</option>\n                    </Select>\n                  </div>\n                </div>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                type=\"button\"\n                onClick={onHide}\n                className=\"btn btn-light btn-elevate\"\n              >\n                Cancel\n              </button>\n              <> </>\n              <button\n                type=\"submit\"\n                onClick={() => handleSubmit()}\n                className=\"btn btn-primary btn-elevate\"\n              >\n                Save\n              </button>\n            </Modal.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\nimport { RemarkEditForm } from \"./RemarkEditForm\";\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\n\nfunction getFormattedDate(date) {\n  if (typeof date === \"string\") {\n    return date;\n  }\n\n  var year = date.getFullYear();\n\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : \"0\" + month;\n\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : \"0\" + day;\n\n  return month + \"/\" + day + \"/\" + year;\n}\n\nexport function RemarkEditDialog() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return {\n      id: remarksUIContext.selectedId,\n      setIds: remarksUIContext.setIds,\n      productId: remarksUIContext.productId,\n      queryParams: remarksUIContext.queryParams,\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\n      initRemark: remarksUIContext.initRemark,\n    };\n  }, [remarksUIContext]);\n\n  // Remarks Redux state\n  const dispatch = useDispatch();\n  const { actionsLoading, remarkForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.remarks.actionsLoading,\n      remarkForEdit: state.remarks.remarkForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    // server request for getting remark by seleted id\n    dispatch(actions.fetchRemark(remarksUIProps.id));\n  }, [remarksUIProps.id, dispatch]);\n\n  const saveRemark = (remark) => {\n    remark.dueDate = getFormattedDate(remark.dueDate);\n    if (!remarksUIProps.id) {\n      // server request for creating remarks\n      dispatch(actions.createRemark(remark)).then(() => {\n        // refresh list after deletion\n        dispatch(\n          actions.fetchRemarks(\n            remarksUIProps.queryParams,\n            remarksUIProps.productId\n          )\n        ).then(() => {\n          // clear selections list\n          remarksUIProps.setIds([]);\n          // closing edit modal\n          remarksUIProps.closeEditRemarkDialog();\n        });\n      });\n    } else {\n      // server request for updating remarks\n      dispatch(actions.updateRemark(remark)).then(() => {\n        // refresh list after deletion\n        dispatch(\n          // refresh list after deletion\n          actions.fetchRemarks(\n            remarksUIProps.queryParams,\n            remarksUIProps.productId\n          )\n        ).then(() => {\n          // clear selections list\n          remarksUIProps.setIds([]);\n          // closing edit modal\n          remarksUIProps.closeEditRemarkDialog();\n        });\n      });\n    }\n  };\n\n  return (\n    <Modal\n      show={remarksUIProps.showEditRemarkDialog}\n      onHide={remarksUIProps.closeEditRemarkDialog}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <RemarkEditDialogHeader id={remarksUIProps.id} />\n      <RemarkEditForm\n        saveRemark={saveRemark}\n        actionsLoading={actionsLoading}\n        remark={remarkForEdit || remarksUIProps.initRemark}\n        onHide={remarksUIProps.closeEditRemarkDialog}\n      />\n    </Modal>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { RemarksFilter } from \"./RemarksFilter\";\nimport { RemarksTable } from \"./RemarksTable\";\nimport { RemarksLoadingDialog } from \"./RemarksLoadingDialog\";\nimport { RemarksDeleteDialog } from \"./RemarksDeleteDialog\";\nimport { RemarkDeleteDialog } from \"./RemarkDeleteDialog\";\nimport { RemarksFetchDialog } from \"./RemarksFetchDialog\";\nimport { RemarksGrouping } from \"./RemarksGrouping\";\nimport { RemarkEditDialog } from \"./remark-edit-dialog/RemarkEditDialog\";\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\n\nexport function Remarks() {\n  // Remarks UI Context\n  const remarksUIContext = useRemarksUIContext();\n  const remarksUIProps = useMemo(() => {\n    return { ids: remarksUIContext.ids };\n  }, [remarksUIContext]);\n\n  return (\n    <>\n      <RemarksLoadingDialog />\n      <RemarkEditDialog />\n      <RemarkDeleteDialog />\n      <RemarksDeleteDialog />\n      <RemarksFetchDialog />\n      <div className=\"form margin-b-30\">\n        <RemarksFilter />\n        {remarksUIProps.ids.length > 0 && <RemarksGrouping />}\n      </div>\n      <RemarksTable />\n    </>\n  );\n}\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport * as actions from \"../../../_redux/products/productsActions\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardHeaderToolbar,\n} from \"../../../../../../_metronic/_partials/controls\";\nimport { ProductEditForm } from \"./ProductEditForm\";\nimport { Specifications } from \"../product-specifications/Specifications\";\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\nimport { Remarks } from \"../product-remarks/Remarks\";\n\nconst initProduct = {\n  id: undefined,\n  model: \"\",\n  manufacture: \"Pontiac\",\n  modelYear: 2020,\n  mileage: 0,\n  description: \"\",\n  color: \"Red\",\n  price: 10000,\n  condition: 1,\n  status: 0,\n  VINCode: \"\",\n};\n\nexport function ProductEdit({\n  history,\n  match: {\n    params: { id },\n  },\n}) {\n  // Subheader\n  const suhbeader = useSubheader();\n\n  // Tabs\n  const [tab, setTab] = useState(\"basic\");\n  const [title, setTitle] = useState(\"\");\n  const dispatch = useDispatch();\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\n  const { actionsLoading, productForEdit } = useSelector(\n    (state) => ({\n      actionsLoading: state.products.actionsLoading,\n      productForEdit: state.products.productForEdit,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    dispatch(actions.fetchProduct(id));\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    let _title = id ? \"\" : \"New Product\";\n    if (productForEdit && id) {\n      _title = `Edit product '${productForEdit.manufacture} ${productForEdit.model} - ${productForEdit.modelYear}'`;\n    }\n\n    setTitle(_title);\n    suhbeader.setTitle(_title);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productForEdit, id]);\n\n  const saveProduct = (values) => {\n    if (!id) {\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\n    } else {\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\n    }\n  };\n\n  const btnRef = useRef();  \n  const saveProductClick = () => {\n    if (btnRef && btnRef.current) {\n      btnRef.current.click();\n    }\n  };\n\n  const backToProductsList = () => {\n    history.push(`/e-commerce/products`);\n  };\n\n  return (\n    <Card>\n      {actionsLoading && <ModalProgressBar />}\n      <CardHeader title={title}>\n        <CardHeaderToolbar>\n          <button\n            type=\"button\"\n            onClick={backToProductsList}\n            className=\"btn btn-light\"\n          >\n            <i className=\"fa fa-arrow-left\"></i>\n            Back\n          </button>\n          {`  `}\n          <button className=\"btn btn-light ml-2\">\n            <i className=\"fa fa-redo\"></i>\n            Reset\n          </button>\n          {`  `}\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary ml-2\"\n            onClick={saveProductClick}\n          >\n            Save\n          </button>\n        </CardHeaderToolbar>\n      </CardHeader>\n      <CardBody>\n        <ul className=\"nav nav-tabs nav-tabs-line \" role=\"tablist\">\n          <li className=\"nav-item\" onClick={() => setTab(\"basic\")}>\n            <a\n              className={`nav-link ${tab === \"basic\" && \"active\"}`}\n              data-toggle=\"tab\"\n              role=\"tab\"\n              aria-selected={(tab === \"basic\").toString()}\n            >\n              Basic info\n            </a>\n          </li>\n          {id && (\n            <>\n              {\" \"}\n              <li className=\"nav-item\" onClick={() => setTab(\"remarks\")}>\n                <a\n                  className={`nav-link ${tab === \"remarks\" && \"active\"}`}\n                  data-toggle=\"tab\"\n                  role=\"button\"\n                  aria-selected={(tab === \"remarks\").toString()}\n                >\n                  Product remarks\n                </a>\n              </li>\n              <li className=\"nav-item\" onClick={() => setTab(\"specs\")}>\n                <a\n                  className={`nav-link ${tab === \"specs\" && \"active\"}`}\n                  data-toggle=\"tab\"\n                  role=\"tab\"\n                  aria-selected={(tab === \"specs\").toString()}\n                >\n                  Product specifications\n                </a>\n              </li>\n            </>\n          )}\n        </ul>\n        <div className=\"mt-5\">\n          {tab === \"basic\" && (\n            <ProductEditForm\n              actionsLoading={actionsLoading}\n              product={productForEdit || initProduct}\n              btnRef={btnRef}\n              saveProduct={saveProduct}\n            />\n          )}\n          {tab === \"remarks\" && id && (\n            <RemarksUIProvider currentProductId={id}>\n              <Remarks />\n            </RemarksUIProvider>\n          )}\n          {tab === \"specs\" && id && (\n            <SpecificationsUIProvider currentProductId={id}>\n              <Specifications />\n            </SpecificationsUIProvider>\n          )}\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport { Redirect, Switch } from \"react-router-dom\";\nimport { CustomersPage } from \"./customers/CustomersPage\";\nimport { ProductsPage } from \"./products/ProductsPage\";\nimport { ProductEdit } from \"./products/product-edit/ProductEdit\";\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../_metronic/layout\";\n\nexport default function eCommercePage() {\n  return (\n    <Suspense fallback={<LayoutSplashScreen />}>\n      <Switch>\n        {\n          /* Redirect from eCommerce root URL to /customers */\n          <Redirect\n            exact={true}\n            from=\"/e-commerce\"\n            to=\"/e-commerce/customers\"\n          />\n        }\n        <ContentRoute path=\"/e-commerce/customers\" component={CustomersPage} />\n        <ContentRoute path=\"/e-commerce/products/new\" component={ProductEdit} />\n        <ContentRoute\n          path=\"/e-commerce/products/:id/edit\"\n          component={ProductEdit}\n        />\n\n        <ContentRoute path=\"/e-commerce/products\" component={ProductsPage} />\n      </Switch>\n    </Suspense>\n  );\n}\n"],"sourceRoot":""}